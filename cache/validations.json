{
  "version": "3.2",
  "log": [
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "4dd887cd1dd2ab71f702841031049fa72ce9f50e082d668c6ddd1a51fc3e133d",
          "withoutMetadata": "40977d93e68f45aed53ad8f5e9f3afc99450e73eab6b60762d3159db7ddbedcd",
          "linkedWithoutMetadata": "40977d93e68f45aed53ad8f5e9f3afc99450e73eab6b60762d3159db7ddbedcd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "91b80c3a4cb7661ad75e5eec551721e8a54479e0b4abad187ccb9c41ff0abb22",
          "withoutMetadata": "e6949f697fc5af776509839fbc8f6f5055d8fc812194dc751a12bea78da6ed65",
          "linkedWithoutMetadata": "e6949f697fc5af776509839fbc8f6f5055d8fc812194dc751a12bea78da6ed65"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "8e2cec6092c4e757f8e5df676648960e13002d1d20516bf74911e50b1635fbc0",
          "withoutMetadata": "e6949f697fc5af776509839fbc8f6f5055d8fc812194dc751a12bea78da6ed65",
          "linkedWithoutMetadata": "e6949f697fc5af776509839fbc8f6f5055d8fc812194dc751a12bea78da6ed65"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "7b748316e6c77faaf2956d88886b2590442869553101b023f23870406142d083",
          "withoutMetadata": "29ca407aea2903c48e985a5e4c4721bc22d8652894f6afec583dda0bfff98ccd",
          "linkedWithoutMetadata": "29ca407aea2903c48e985a5e4c4721bc22d8652894f6afec583dda0bfff98ccd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "dcb7a35b0638db00a977d4272045ec437526090d467a29a14f878065c09c75ac",
          "withoutMetadata": "ab280c70523c5a21c30d794fd51187c18c06b3138f54e12608b36274036ebb7c",
          "linkedWithoutMetadata": "ab280c70523c5a21c30d794fd51187c18c06b3138f54e12608b36274036ebb7c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "ce8b167dac0992a0e75b4236f8123b5ed645584a7708d63764f8d2d2b32fb54b",
          "withoutMetadata": "ab280c70523c5a21c30d794fd51187c18c06b3138f54e12608b36274036ebb7c",
          "linkedWithoutMetadata": "ab280c70523c5a21c30d794fd51187c18c06b3138f54e12608b36274036ebb7c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "1f106504a6eadbd7c4c1e764123f96b9d037b04a5d6cd804591748ee2c4a567f",
          "withoutMetadata": "4e3c772e699b3c8486a7e03b54b1cab44893b0fdd781484d203d4675c42cba43",
          "linkedWithoutMetadata": "4e3c772e699b3c8486a7e03b54b1cab44893b0fdd781484d203d4675c42cba43"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "55a191027badb9790b46f7c7dea3c94dfe30d84e1673482eead21de388a8a37d",
          "withoutMetadata": "856ebeea6a376db6f5b476b3d4e6e56b896404ace603bfa01a0ed6ebfb58bbf5",
          "linkedWithoutMetadata": "856ebeea6a376db6f5b476b3d4e6e56b896404ace603bfa01a0ed6ebfb58bbf5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "9fc1723f50c08b8bf5c43496c3176f539aee97f0b68bd2382901bb262d147a31",
          "withoutMetadata": "3468bee0af89bc299dfcf7c8d44f8b381ed95a00c5f27ba72ccc4b71718872b6",
          "linkedWithoutMetadata": "3468bee0af89bc299dfcf7c8d44f8b381ed95a00c5f27ba72ccc4b71718872b6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:23"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:57"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "474d00a20bb6302a817645c500d8f28c3dc84af445d9a7f3838326a7351798be",
          "withoutMetadata": "3468bee0af89bc299dfcf7c8d44f8b381ed95a00c5f27ba72ccc4b71718872b6",
          "linkedWithoutMetadata": "3468bee0af89bc299dfcf7c8d44f8b381ed95a00c5f27ba72ccc4b71718872b6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:23"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:57"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "cf94fe811fd093958392c3eeadf2e6b48c7b4f932d64db72b09ff60e8a05449b",
          "withoutMetadata": "5f20ac71e641076fb622ff0cdbca8133a0311b3b04b5b71927027b2c67ab9a66",
          "linkedWithoutMetadata": "5f20ac71e641076fb622ff0cdbca8133a0311b3b04b5b71927027b2c67ab9a66"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:23"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:57"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "993c60ae06792b78b9a15793af4bbe479cca709a20ccb8c488e399a8506d6144",
          "withoutMetadata": "5f20ac71e641076fb622ff0cdbca8133a0311b3b04b5b71927027b2c67ab9a66",
          "linkedWithoutMetadata": "5f20ac71e641076fb622ff0cdbca8133a0311b3b04b5b71927027b2c67ab9a66"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:23"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "20",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:57"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)2406_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2406_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "d7803afca9979df081dfd357a5c7a7b25747107d2aa7d6801e3d79be8d879e5e",
          "withoutMetadata": "30c78bf398cd78ba5489c0023acb83ca817cb4db74948c665ad16425a8af4ed2",
          "linkedWithoutMetadata": "30c78bf398cd78ba5489c0023acb83ca817cb4db74948c665ad16425a8af4ed2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:78"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWallets",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributionWalletsPercentages",
            "src": "contracts\\MetaStock.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "distributionWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:23"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "distributionWalletsPercentages",
              "offset": 0,
              "slot": "25",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "26",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "26",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:43"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:44"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "33",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:62"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "34",
              "type": "t_struct(Fees)2424_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2424_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "a83e01be51658ad03013b36c6893edde8e373d5fa5b53a4113ecd76744d4ca20",
          "withoutMetadata": "215292e1e63349df16ad50c23c7b0218fb45eb60d2c8eea2780dd653cac2c872",
          "linkedWithoutMetadata": "215292e1e63349df16ad50c23c7b0218fb45eb60d2c8eea2780dd653cac2c872"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "e40e5086819294e071a2db42a26f9d4881a9a6e117546ffb5bc757cb4d46160f",
          "withoutMetadata": "42f7928ef1107ae9ec2f6d20389339be7d3931a4468378219f9c07906da90203",
          "linkedWithoutMetadata": "42f7928ef1107ae9ec2f6d20389339be7d3931a4468378219f9c07906da90203"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "a0c51eec7a628f715dfa6f4a9184b810ff843ced81593b4cbffff754ac56b595",
          "withoutMetadata": "98a49366efbf5b615511ba208f273c3f9ae6d3b623e7b21daf7a4bd050c95b57",
          "linkedWithoutMetadata": "98a49366efbf5b615511ba208f273c3f9ae6d3b623e7b21daf7a4bd050c95b57"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "324458ec7ebdd85d012c94594c120b7162baedb9b0abdd4b8eb415eb26cea8e6",
          "withoutMetadata": "98cc3105007a073a3c160964f5e7ee5d6016c6017fc443f1b8c9feebf0202696",
          "linkedWithoutMetadata": "98cc3105007a073a3c160964f5e7ee5d6016c6017fc443f1b8c9feebf0202696"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "e28b7d3153e3de782f0e480c142de5ec80fcba0469145e4a9401dddbed63f29b",
          "withoutMetadata": "d76eba23563900091909ecfa289d1ff6ff7095083113a0bd673ad21bd70bcc36",
          "linkedWithoutMetadata": "d76eba23563900091909ecfa289d1ff6ff7095083113a0bd673ad21bd70bcc36"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "bd6daa6b1fba5195e2aaa13884cc130087e0b9cb019c9c705f23d502028a60ff",
          "withoutMetadata": "2b58adfed04a175d972ec039969cbf6e0a5a38f458a5f7b726c8c674cec63fab",
          "linkedWithoutMetadata": "2b58adfed04a175d972ec039969cbf6e0a5a38f458a5f7b726c8c674cec63fab"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "2ce78e1a08f4983fb01e6e142ad41182f0b7729205e8068714d4332741c21833",
          "withoutMetadata": "6c49cb4d559d207d459bb1943c34f5432d63269cb63d03bf9134cc943af303c4",
          "linkedWithoutMetadata": "6c49cb4d559d207d459bb1943c34f5432d63269cb63d03bf9134cc943af303c4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "0da4d93c8d9fa6af5c072d0fa03caeeb85de0ad47b9998f7c6e231447468a504",
          "withoutMetadata": "49b080e66d4e08d61636e420e01de4f8ed9d8fe31f362acf1c8c38b30c353d4c",
          "linkedWithoutMetadata": "49b080e66d4e08d61636e420e01de4f8ed9d8fe31f362acf1c8c38b30c353d4c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "a50732fa89c8fe406c2c19c77ec21f46e59e4626f49842cf2b393ef6b82a8ac6",
          "withoutMetadata": "a68a9aba9698475ab3f56ae4f35d2f289a85972fa171ac3903ec62cff063cf8a",
          "linkedWithoutMetadata": "a68a9aba9698475ab3f56ae4f35d2f289a85972fa171ac3903ec62cff063cf8a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:83"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "burnPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "burnPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:38"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "30",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:46"
            },
            {
              "label": "usersBuysCounter",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:47"
            },
            {
              "label": "usersSellCounter",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:48"
            },
            {
              "label": "usersLastBuysTxs",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:49"
            },
            {
              "label": "usersLastSellsTxs",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:50"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "37",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:67"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Fees)2426_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2426_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d09b70a90fe15fa4a4db2e1fbded6f6a3f5f3899cb2e72bf139a6a46fc4f1e57",
          "withoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48",
          "linkedWithoutMetadata": "6c922e64fba05dadb7d0937595afc661d056ab3786285d18418014de14404d48"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapUSDForTokens(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:9",
        "version": {
          "withMetadata": "42deb40fa80f3c57177d474f5b6a6855a8106aa4f12e577e05c3b4020105481d",
          "withoutMetadata": "09dc934626c7068a81e80b6cb0eeeeb442ab6a4e3aeac2f37172c1a5c76b19fb",
          "linkedWithoutMetadata": "09dc934626c7068a81e80b6cb0eeeeb442ab6a4e3aeac2f37172c1a5c76b19fb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:78"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1Address",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2Address",
            "src": "contracts\\MetaStock.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3Address",
            "src": "contracts\\MetaStock.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4Address",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5Address",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w1AddressPercent",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w2AddressPercent",
            "src": "contracts\\MetaStock.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w3AddressPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w4AddressPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "w5AddressPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:21"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:24"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:28"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:34"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:35"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "29",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:39"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "29",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:43"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:44"
            },
            {
              "label": "usersLastSellsDates",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:45"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "33",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:62"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "34",
              "type": "t_struct(Fees)2411_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2411_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "6d580780276b8db082581b4d901158abc2c301c0e79af560ac807f01aab3f89a",
          "withoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b",
          "linkedWithoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:10",
        "version": {
          "withMetadata": "e99ab8c4bd284bffd8747be243687fdefc3793a3ad36955ec0c50237925d20c2",
          "withoutMetadata": "941439801de88a2e1ef25830b8fb761818b6071250109c04ed988aa93c7469b9",
          "linkedWithoutMetadata": "941439801de88a2e1ef25830b8fb761818b6071250109c04ed988aa93c7469b9"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWallets",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWalletsPercentages",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "metaStockUtils",
            "src": "contracts\\MetaStock.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "teamWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "teamWalletsPercentages",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsDates",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "26",
              "type": "t_struct(Fees)2398_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            },
            {
              "label": "metaStockUtils",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(MetaStockUtils)3524",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(MetaStockUtils)3524": {
              "label": "contract MetaStockUtils",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2398_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "6d580780276b8db082581b4d901158abc2c301c0e79af560ac807f01aab3f89a",
          "withoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b",
          "linkedWithoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:10",
        "version": {
          "withMetadata": "1965889f82bf6f90dab2e990ee2237f7f015cfa4906475724159e299c183f14d",
          "withoutMetadata": "3566c4fd9e30096dd4b304d9c0c07737332921eef9790d964f8a2b5252019cf8",
          "linkedWithoutMetadata": "3566c4fd9e30096dd4b304d9c0c07737332921eef9790d964f8a2b5252019cf8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWallets",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWalletsPercentages",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "metaStockUtils",
            "src": "contracts\\MetaStock.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "teamWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "teamWalletsPercentages",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsDates",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "26",
              "type": "t_struct(Fees)2398_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            },
            {
              "label": "metaStockUtils",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(MetaStockUtils)3508",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(MetaStockUtils)3508": {
              "label": "contract MetaStockUtils",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2398_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "6d580780276b8db082581b4d901158abc2c301c0e79af560ac807f01aab3f89a",
          "withoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b",
          "linkedWithoutMetadata": "55e31ced6574b83aec683f152012d1530e3b89dc934ec43e1900188a64bebe2b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:10",
        "version": {
          "withMetadata": "c9dedff68f8e5b7e18eaeb537fbf4336cf7e57c5da79336d132ddf59d0c3187d",
          "withoutMetadata": "d4a8828929fb60bdcb38cb3362a79a203f275197d422907f2aba5b6bffc50e5f",
          "linkedWithoutMetadata": "d4a8828929fb60bdcb38cb3362a79a203f275197d422907f2aba5b6bffc50e5f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWallets",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWalletsPercentages",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "metaStockUtils",
            "src": "contracts\\MetaStock.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "teamWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "teamWalletsPercentages",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsDates",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "26",
              "type": "t_struct(Fees)2398_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            },
            {
              "label": "metaStockUtils",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(MetaStockUtils)3525",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(MetaStockUtils)3525": {
              "label": "contract MetaStockUtils",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2398_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d9c51e34cf18a67eee8ff4dfa379106218c1a99c471f821e612934916e2bc5b8",
          "withoutMetadata": "fba73533286d3559932d249d3f427cc8c869745eee446167e8a13f360f67aad2",
          "linkedWithoutMetadata": "fba73533286d3559932d249d3f427cc8c869745eee446167e8a13f360f67aad2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "ad949e377b2cceb8e804fd1b1618852d55dfe81e1e86b8ffb5531b71a50aa8df",
          "withoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d",
          "linkedWithoutMetadata": "87aa8c8d17cd1312eb03f4cadbb8bc3208618c630c838f96bc7517adf46ac99d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "@uniswap\\v2-core\\contracts\\interfaces\\IUniswapV2Factory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap\\v2-periphery\\contracts\\interfaces\\IUniswapV2Router02.sol:6",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CatPizza": {
        "src": "contracts\\CatPizza.sol:9",
        "version": {
          "withMetadata": "22ed255a9bdd9f973d3ae11d6e9159b38bf8fe145431d6d264be107572839094",
          "withoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6",
          "linkedWithoutMetadata": "f26cdd6c673ceef8e8a3a88a410b09bbefbcadb34ebd9cd534eb4351c6d3a9d6"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "autoLiquidity(uint256)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CatPizza",
            "src": "contracts\\CatPizza.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:11"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:12"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:13"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:14"
            },
            {
              "label": "w1Address",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:15"
            },
            {
              "label": "w2Address",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:16"
            },
            {
              "label": "w3Address",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:17"
            },
            {
              "label": "w4Address",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:18"
            },
            {
              "label": "w5Address",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:19"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:22"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:23"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:24"
            },
            {
              "label": "w1AddressPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:25"
            },
            {
              "label": "w2AddressPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:26"
            },
            {
              "label": "w3AddressPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:27"
            },
            {
              "label": "w4AddressPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:28"
            },
            {
              "label": "w5AddressPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:30"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:31"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:34"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "24",
              "type": "t_bool",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:35"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:38"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:39"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:56"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "28",
              "type": "t_struct(Fees)1246_storage",
              "contract": "CatPizza",
              "src": "contracts\\CatPizza.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)1246_storage": {
              "label": "struct CatPizza.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStock": {
        "src": "contracts\\MetaStock.sol:10",
        "version": {
          "withMetadata": "25f9d41f509526c64323a3db5b2a8549102c9e7e7008b55e858a58f85ea1cdf6",
          "withoutMetadata": "d66f05c30890e91e00af615177ae33ae949f8f0a2f42584badc6f94e84e02039",
          "linkedWithoutMetadata": "d66f05c30890e91e00af615177ae33ae949f8f0a2f42584badc6f94e84e02039"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getOwner()",
          "setTaxes(uint16,uint16,uint16)",
          "transferOwnership(address)",
          "burn(uint256)",
          "isExcludedFromFee(address)",
          "excludeFromFee(address,bool)",
          "setSwapThreshold(uint256)",
          "setMaxWalletAmount(uint256)",
          "setMaxTransactionAmount(uint256)",
          "enableTrading()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaStock",
            "src": "contracts\\MetaStock.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\MetaStock.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokenAddress",
            "src": "contracts\\MetaStock.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityWallet",
            "src": "contracts\\MetaStock.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWallets",
            "src": "contracts\\MetaStock.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamWalletsPercentages",
            "src": "contracts\\MetaStock.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "routerAddress",
            "src": "contracts\\MetaStock.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapThreshold",
            "src": "contracts\\MetaStock.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "masterTaxDivisor",
            "src": "contracts\\MetaStock.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletAmount",
            "src": "contracts\\MetaStock.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "teamPercent",
            "src": "contracts\\MetaStock.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "autoLiquidityPercent",
            "src": "contracts\\MetaStock.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyBackPercent",
            "src": "contracts\\MetaStock.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "charityPercent",
            "src": "contracts\\MetaStock.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts\\MetaStock.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "metaStockUtils",
            "src": "contracts\\MetaStock.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:12"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:13"
            },
            {
              "label": "lpPair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:14"
            },
            {
              "label": "swapTokenAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:15"
            },
            {
              "label": "charityWallet",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:18"
            },
            {
              "label": "teamWallets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:19"
            },
            {
              "label": "teamWalletsPercentages",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:20"
            },
            {
              "label": "routerAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:22"
            },
            {
              "label": "swapThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:25"
            },
            {
              "label": "masterTaxDivisor",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:26"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:27"
            },
            {
              "label": "teamPercent",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:29"
            },
            {
              "label": "autoLiquidityPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:30"
            },
            {
              "label": "buyBackPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:31"
            },
            {
              "label": "charityPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:32"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:33"
            },
            {
              "label": "inSwap",
              "offset": 0,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:36"
            },
            {
              "label": "tradingEnabled",
              "offset": 1,
              "slot": "21",
              "type": "t_bool",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:37"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:40"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:41"
            },
            {
              "label": "usersLastSellsDates",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:42"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(IUniswapV2Router02)1169",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:59"
            },
            {
              "label": "_feesRates",
              "offset": 0,
              "slot": "26",
              "type": "t_struct(Fees)2398_storage",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:60"
            },
            {
              "label": "metaStockUtils",
              "offset": 0,
              "slot": "27",
              "type": "t_contract(MetaStockUtils)3563",
              "contract": "MetaStock",
              "src": "contracts\\MetaStock.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Router02)1169": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(MetaStockUtils)3563": {
              "label": "contract MetaStockUtils",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fees)2398_storage": {
              "label": "struct MetaStock.Fees",
              "members": [
                {
                  "label": "buyFee",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sellFee",
                  "type": "t_uint16",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "transferFee",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MetaStockUtils": {
        "src": "contracts\\MetaStockUtils.sol:8",
        "version": {
          "withMetadata": "d9c51e34cf18a67eee8ff4dfa379106218c1a99c471f821e612934916e2bc5b8",
          "withoutMetadata": "fba73533286d3559932d249d3f427cc8c869745eee446167e8a13f360f67aad2",
          "linkedWithoutMetadata": "fba73533286d3559932d249d3f427cc8c869745eee446167e8a13f360f67aad2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPathForTokensToTokens(address,address)",
          "swapTokensForUSD(address,address,address,uint256)",
          "swapTokensForBNB(address,address,uint256)",
          "sendToTeam(address,address[],uint256[])",
          "addLiquidity(address,address,uint256,uint256,address)",
          "autoLiquidity(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:353",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:208",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:167",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:369",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeLibrary": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:274",
        "version": {
          "withMetadata": "175122e74c6a2448b508fe28b34cb5e46729cf7175a675555c5683eb7e4f28f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeRouter": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:375",
        "version": {
          "withMetadata": "3f7fbed8aec2d38c920a1f035963ea0bc34beea699ee8a3a9e491544503fa4e4",
          "withoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866",
          "linkedWithoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866"
        },
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [
          "SafeMath",
          "PancakeLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address,address)",
          "()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeRouter",
            "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:386"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:378"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:379"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:260",
        "version": {
          "withMetadata": "e8bb2503e05100c408121c50f1a6d6e201896f677f8c21cead2a1616e8b96ac4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\BSC Testnet Connections\\PancakeRouter.sol:26",
        "version": {
          "withMetadata": "80102c522c8e3f23b21b3394fb25769812355038601408c5b3a0c89fe9111219",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "BEP20Token": {
        "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:347",
        "version": {
          "withMetadata": "ea872a728bf16c8ad89facdb2b0125b9ab7f9d77fd64342a43b9d96aba778038",
          "withoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67",
          "linkedWithoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BEP20Token",
            "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:359"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:289"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:350"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:352"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:354"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint8",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:355"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:356"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:357"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:112",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBEP20": {
        "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:288",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:296"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\BSC Testnet Connections\\BEP20Token.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:98",
        "version": {
          "withMetadata": "e774f782a37263f644871c47f47523deeb77ed6e37645b8b797a9ef4e0e5b3ff",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:240",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeCallee": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:256",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pancakeCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeERC20": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:75",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:203",
        "version": {
          "withMetadata": "4aac2cd12b6cc6306419c139454f2530ce8dc86fb2d78fdb2f2fc26b81cbcb52",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeERC20": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:112",
        "version": {
          "withMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "withoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "linkedWithoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8"
        },
        "inherit": [
          "IPancakeERC20"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeERC20",
            "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:125"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakeFactory": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:452",
        "version": {
          "withMetadata": "f9f38632e59c58c184f9595ca616176f6bdfa4c80c26b7c561caafadb5451edf",
          "withoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015",
          "linkedWithoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015"
        },
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeFactory",
            "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:463"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:455"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:456"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "PancakeFactory",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:458"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PancakeFactory",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:459"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakePair": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:260",
        "version": {
          "withMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "withoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "linkedWithoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d"
        },
        "inherit": [
          "PancakeERC20",
          "IPancakeERC20",
          "IPancakePair"
        ],
        "libraries": [
          "SafeMath",
          "UQ112x112",
          "Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakePair",
            "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:310"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:279"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:125"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:267"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:268"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:269"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:271"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:272"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:273"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:275"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:276"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:277"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:279"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UQ112x112": {
        "src": "contracts\\BSC Testnet Connections\\PancakeFactory.sol:226",
        "version": {
          "withMetadata": "942571b02b24ff92b7fe67a9ac37f72a0d5c160db5006f63669b0a5ba11d0583",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "WBNB": {
        "src": "contracts\\BSC Testnet Connections\\WBNB.sol:7",
        "version": {
          "withMetadata": "0d8b51e1510100bc81189adc2f43dfb1c0caf3d1dd3dd483b9eb03b48bbc21cf",
          "withoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910",
          "linkedWithoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\BSC Testnet Connections\\WBNB.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\BSC Testnet Connections\\WBNB.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\BSC Testnet Connections\\WBNB.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "WBNB",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts\\BSC Testnet Connections\\WBNB.sol:8"
            },
            {
              "contract": "WBNB",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts\\BSC Testnet Connections\\WBNB.sol:9"
            },
            {
              "contract": "WBNB",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts\\BSC Testnet Connections\\WBNB.sol:10"
            },
            {
              "contract": "WBNB",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\BSC Testnet Connections\\WBNB.sol:17"
            },
            {
              "contract": "WBNB",
              "label": "allowance",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\BSC Testnet Connections\\WBNB.sol:18"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string storage pointer"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}