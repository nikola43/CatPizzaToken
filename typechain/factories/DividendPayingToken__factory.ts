/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DividendPayingToken,
  DividendPayingTokenInterface,
} from "../DividendPayingToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "accumulativeDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeBusdDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeDividends",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "dividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividendsDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawableDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawnDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040527378867bbeef44f2326bf8ddd1941a4439382ef2a76080523480156200002957600080fd5b50604051620011b6380380620011b68339810160408190526200004c9162000207565b8151829082906200006590600390602085019062000094565b5080516200007b90600490602084019062000094565b50506005805460ff1916601217905550620002ad915050565b828054620000a29062000271565b90600052602060002090601f016020900481019282620000c6576000855562000111565b82601f10620000e157805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000111578251825591602001919060010190620000f4565b506200011f92915062000123565b5090565b5b808211156200011f576000815560010162000124565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016257600080fd5b81516001600160401b03808211156200017f576200017f6200013a565b604051601f8301601f19908116603f01168101908282118183101715620001aa57620001aa6200013a565b81604052838152602092508683858801011115620001c757600080fd5b600091505b83821015620001eb5785820183015181830184015290820190620001cc565b83821115620001fd5760008385830101525b9695505050505050565b600080604083850312156200021b57600080fd5b82516001600160401b03808211156200023357600080fd5b620002418683870162000150565b935060208501519150808211156200025857600080fd5b50620002678582860162000150565b9150509250929050565b600181811c908216806200028657607f821691505b602082108103620002a757634e487b7160e01b600052602260045260246000fd5b50919050565b608051610ee6620002d0600039600081816102470152610ad80152610ee66000f3fe6080604052600436106101235760003560e01c806370a08231116100a0578063a8b9d24011610064578063a8b9d24014610337578063a9059cbb14610357578063aafd847a14610377578063dd62ed3e146103ad578063dd7a422b146103f357600080fd5b806370a082311461029657806385a6b3ae146102cc57806391b89fba146102e257806395d89b4114610302578063a457c2d71461031757600080fd5b806327ce0147116100e757806327ce0147146101d3578063313ce567146101f35780633950935114610215578063484f4ea9146102355780636a4740021461028157600080fd5b806303c833021461012f57806306fdde0314610139578063095ea7b31461016457806318160ddd1461019457806323b872dd146101b357600080fd5b3661012a57005b600080fd5b610137610413565b005b34801561014557600080fd5b5061014e6104a6565b60405161015b9190610c02565b60405180910390f35b34801561017057600080fd5b5061018461017f366004610c73565b610538565b604051901515815260200161015b565b3480156101a057600080fd5b506002545b60405190815260200161015b565b3480156101bf57600080fd5b506101846101ce366004610c9d565b61054f565b3480156101df57600080fd5b506101a56101ee366004610cd9565b6105b8565b3480156101ff57600080fd5b5060055460405160ff909116815260200161015b565b34801561022157600080fd5b50610184610230366004610c73565b610614565b34801561024157600080fd5b506102697f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015b565b34801561028d57600080fd5b5061013761064a565b3480156102a257600080fd5b506101a56102b1366004610cd9565b6001600160a01b031660009081526020819052604090205490565b3480156102d857600080fd5b506101a5600a5481565b3480156102ee57600080fd5b506101a56102fd366004610cd9565b610656565b34801561030e57600080fd5b5061014e610661565b34801561032357600080fd5b50610184610332366004610c73565b610670565b34801561034357600080fd5b506101a5610352366004610cd9565b6106bf565b34801561036357600080fd5b50610184610372366004610c73565b6106eb565b34801561038357600080fd5b506101a5610392366004610cd9565b6001600160a01b031660009081526009602052604090205490565b3480156103b957600080fd5b506101a56103c8366004610cf4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156103ff57600080fd5b5061013761040e366004610d27565b6106f8565b600061041e60025490565b1161042857600080fd5b34156104a45761045b61043a60025490565b61044834600160801b610778565b6104529190610d56565b60065490610806565b60065560405134815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a546104a09034610806565b600a555b565b6060600380546104b590610d78565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190610d78565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b6000610545338484610865565b5060015b92915050565b600061055c848484600080fd5b6105ae84336105a985604051806060016040528060288152602001610e64602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610989565b610865565b5060019392505050565b6001600160a01b03811660009081526008602090815260408083205491839052822054600654600160801b9261060a92610605926105ff916105fa9190610778565b6109c0565b906109d0565b610a0e565b6105499190610d56565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105459185906105a99086610806565b61065333610a21565b50565b6000610549826106bf565b6060600480546104b590610d78565b600061054533846105a985604051806060016040528060258152602001610e8c602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610989565b6001600160a01b038116600090815260096020526040812054610549906106e5846105b8565b90610ba6565b6000610545338484600080fd5b600061070360025490565b1161070d57600080fd5b80156106535761072d61071f60025490565b61044883600160801b610778565b60065560405181815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a546107729082610806565b600a5550565b60008260000361078a57506000610549565b60006107968385610db2565b9050826107a38583610d56565b146107ff5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b9392505050565b6000806108138385610dd1565b9050838110156107ff5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016107f6565b6001600160a01b0383166108c75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107f6565b6001600160a01b0382166109285760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107f6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600081848411156109ad5760405162461bcd60e51b81526004016107f69190610c02565b506109b88385610de9565b949350505050565b6000818181121561054957600080fd5b6000806109dd8385610e00565b9050600083121580156109f05750838112155b80610a055750600083128015610a0557508381125b6107ff57600080fd5b600080821215610a1d57600080fd5b5090565b600080610a2d836106bf565b90508015610b9d576001600160a01b038316600090815260096020526040902054610a589082610806565b6001600160a01b038416600081815260096020526040908190209290925590517fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d90610aa79084815260200190565b60405180910390a260405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190610e41565b905080610b96576001600160a01b038416600090815260096020526040902054610b719083610ba6565b6001600160a01b03909416600090815260096020526040812094909455509192915050565b5092915050565b50600092915050565b600082821115610bf85760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016107f6565b6107ff8284610de9565b600060208083528351808285015260005b81811015610c2f57858101830151858201604001528201610c13565b81811115610c41576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c6e57600080fd5b919050565b60008060408385031215610c8657600080fd5b610c8f83610c57565b946020939093013593505050565b600080600060608486031215610cb257600080fd5b610cbb84610c57565b9250610cc960208501610c57565b9150604084013590509250925092565b600060208284031215610ceb57600080fd5b6107ff82610c57565b60008060408385031215610d0757600080fd5b610d1083610c57565b9150610d1e60208401610c57565b90509250929050565b600060208284031215610d3957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082610d7357634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680610d8c57607f821691505b602082108103610dac57634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615610dcc57610dcc610d40565b500290565b60008219821115610de457610de4610d40565b500190565b600082821015610dfb57610dfb610d40565b500390565b600080821280156001600160ff1b0384900385131615610e2257610e22610d40565b600160ff1b8390038412811615610e3b57610e3b610d40565b50500190565b600060208284031215610e5357600080fd5b815180151581146107ff57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220017af7da483a575a13a185c82daa5fd492337c8a35692aea5df1cd0f5aff7b3264736f6c634300080d0033";

export class DividendPayingToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DividendPayingToken> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<DividendPayingToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): DividendPayingToken {
    return super.attach(address) as DividendPayingToken;
  }
  connect(signer: Signer): DividendPayingToken__factory {
    return super.connect(signer) as DividendPayingToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendPayingTokenInterface {
    return new utils.Interface(_abi) as DividendPayingTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DividendPayingToken {
    return new Contract(address, _abi, signerOrProvider) as DividendPayingToken;
  }
}
