/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HermesDividendTracker,
  HermesDividendTrackerInterface,
} from "../HermesDividendTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributionTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
    ],
    name: "ClaimWaitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ExcludeFromDividends",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "accumulativeDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimWait",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeDividends",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeTokensDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "dividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "excludedFromDividends",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "int256",
        name: "index",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "iterationsUntilProcessed",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "withdrawableDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsUntilAutoClaimAvailable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAccountAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfTokenHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTokenBalanceForDividends",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "processAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividendsDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newClaimWait",
        type: "uint256",
      },
    ],
    name: "updateClaimWait",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawableDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawnDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200235738038062002357833981016040819052620000349162000297565b6040518060400160405280601a81526020017f54657374546f6b656e5f4469766964656e645f547261636b65720000000000008152506040518060400160405280601a81526020017f54657374546f6b656e5f4469766964656e645f547261636b65720000000000008152508282828160039080519060200190620000bb929190620001f1565b508051620000d1906004906020840190620001f1565b505060405163095ea7b360e01b815230600482015260001960248201526001600160a01b038316915063095ea7b3906044016020604051808303816000875af115801562000123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001499190620002c9565b50600780546001600160a01b0319166001600160a01b0392831617905560405163095ea7b360e01b81523060048201526000196024820152908416925063095ea7b391506044016020604051808303816000875af1158015620001b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d69190620002c9565b505060c860135569021e19e0c9bab240000060805262000329565b828054620001ff90620002ed565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b600060208284031215620002aa57600080fd5b81516001600160a01b0381168114620002c257600080fd5b9392505050565b600060208284031215620002dc57600080fd5b81518015158114620002c257600080fd5b600181811c908216806200030257607f821691505b6020821081036200032357634e487b7160e01b600052602260045260246000fd5b50919050565b60805161200b6200034c600039600081816105340152610dbf015261200b6000f3fe6080604052600436106101bd5760003560e01c806385a6b3ae116100ed578063be10b61411610090578063be10b61414610522578063d16f7e1414610556578063dd62ed3e14610576578063e30443bc14610596578063e7841ec0146105b6578063e98030c7146105cb578063f2fde38b146105eb578063fbcbc0f11461060b578063ffb2c4791461062b57600080fd5b806385a6b3ae1461042157806391b89fba1461043757806395d89b4114610457578063a457c2d71461046c578063a8b9d2401461048c578063a9059cbb146104ac578063aafd847a146104cc578063bc4c4b371461050257600080fd5b80633009a609116101605780633009a609146102cf578063313ce567146102e557806331e79db01461030157806339509351146103215780634e7b827f146103415780635183d6fd146103715780636a474002146103d65780636f2789ec146103eb57806370a082311461040157600080fd5b806303c83302146101c957806306fdde03146101d3578063095ea7b3146101fe57806309bbedde1461022e57806318160ddd1461024d578063226cfa3d1461026257806323b872dd1461028f57806327ce0147146102af57600080fd5b366101c457005b600080fd5b6101d1610666565b005b3480156101df57600080fd5b506101e86106f9565b6040516101f59190611c7a565b60405180910390f35b34801561020a57600080fd5b5061021e610219366004611ce4565b61078b565b60405190151581526020016101f5565b34801561023a57600080fd5b50600b545b6040519081526020016101f5565b34801561025957600080fd5b5060025461023f565b34801561026e57600080fd5b5061023f61027d366004611d10565b60126020526000908152604090205481565b34801561029b57600080fd5b5061021e6102aa366004611d2d565b6107a5565b3480156102bb57600080fd5b5061023f6102ca366004611d10565b6107c9565b3480156102db57600080fd5b5061023f600f5481565b3480156102f157600080fd5b50604051601281526020016101f5565b34801561030d57600080fd5b506101d161031c366004611d10565b610822565b34801561032d57600080fd5b5061021e61033c366004611ce4565b61092e565b34801561034d57600080fd5b5061021e61035c366004611d10565b60116020526000908152604090205460ff1681565b34801561037d57600080fd5b5061039161038c366004611d6e565b610950565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101f5565b3480156103e257600080fd5b506101d1610aa4565b3480156103f757600080fd5b5061023f60135481565b34801561040d57600080fd5b5061023f61041c366004611d10565b610b55565b34801561042d57600080fd5b5061023f600a5481565b34801561044357600080fd5b5061023f610452366004611d10565b610b70565b34801561046357600080fd5b506101e8610b7b565b34801561047857600080fd5b5061021e610487366004611ce4565b610b8a565b34801561049857600080fd5b5061023f6104a7366004611d10565b610c05565b3480156104b857600080fd5b5061021e6104c7366004611ce4565b610c31565b3480156104d857600080fd5b5061023f6104e7366004611d10565b6001600160a01b031660009081526009602052604090205490565b34801561050e57600080fd5b5061021e61051d366004611d95565b610c3f565b34801561052e57600080fd5b5061023f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056257600080fd5b506101d1610571366004611d6e565b610cda565b34801561058257600080fd5b5061023f610591366004611dce565b610d5b565b3480156105a257600080fd5b506101d16105b1366004611ce4565b610d86565b3480156105c257600080fd5b50600f5461023f565b3480156105d757600080fd5b506101d16105e6366004611d6e565b610ef3565b3480156105f757600080fd5b506101d1610606366004611d10565b61105d565b34801561061757600080fd5b50610391610626366004611d10565b61112b565b34801561063757600080fd5b5061064b610646366004611d6e565b61128c565b604080519384526020840192909252908201526060016101f5565b600061067160025490565b1161067b57600080fd5b34156106f7576106ae61068d60025490565b61069b34600160801b6113a9565b6106a59190611e12565b60055490611432565b60055560405134815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a546106f39034611432565b600a555b565b60606003805461070890611e34565b80601f016020809104026020016040519081016040528092919081815260200182805461073490611e34565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050505050905090565b600033610799818585611491565b60019150505b92915050565b6000336107b38582856115b5565b6107be85858561162f565b506001949350505050565b6001600160a01b038116600090815260086020526040812054600160801b90610818906108139061080d6108086107ff88610b55565b600554906113a9565b611690565b906116a0565b6116de565b61079f9190611e12565b6010546001600160a01b0316331461083957600080fd5b6001600160a01b03811660009081526011602052604090205460ff161561085f57600080fd5b6001600160a01b0381166000908152601160205260408120805460ff1916600117905561088d9082906116f1565b60405163131836e760e21b815273__$177dccba129b0d637dd8098c685ac510bf$__90634c60db9c906108c790600b908590600401611e6e565b60006040518083038186803b1580156108df57600080fd5b505af41580156108f3573d6000803e3d6000fd5b50506040516001600160a01b03841692507fa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b259150600090a250565b6000336107998185856109418383610d5b565b61094b9190611e85565b611491565b600080600080600080600080600b73__$177dccba129b0d637dd8098c685ac510bf$__63deb3d89690916040518263ffffffff1660e01b815260040161099891815260200190565b602060405180830381865af41580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190611e9d565b89106109fe575060009650600019955085945086935083925082915081905080610a99565b6040516368d54f3f60e11b8152600b6004820152602481018a905260009073__$177dccba129b0d637dd8098c685ac510bf$__9063d1aa9e7e90604401602060405180830381865af4158015610a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7c9190611eb6565b9050610a878161112b565b98509850985098509850985098509850505b919395975091939597565b60405162461bcd60e51b815260206004820152606f60248201527f54657374546f6b656e5f4469766964656e645f547261636b65723a207769746860448201527f647261774469766964656e642064697361626c65642e2055736520746865202760648201527f636c61696d272066756e6374696f6e206f6e20746865206d61696e205465737460848201526e2a37b5b2b71031b7b73a3930b1ba1760891b60a482015260c4015b60405180910390fd5b6001600160a01b031660009081526020819052604090205490565b600061079f82610c05565b60606004805461070890611e34565b60003381610b988286610d5b565b905083811015610bf85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b4c565b6107be8286868403611491565b6001600160a01b03811660009081526009602052604081205461079f90610c2b846107c9565b90611744565b60003361079981858561162f565b6010546000906001600160a01b03163314610c5957600080fd5b6000610c64846117a0565b90508015610cd0576001600160a01b038416600081815260126020526040908190204290555184151591907fa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf09290610cbe9085815260200190565b60405180910390a3600191505061079f565b5060009392505050565b6000610ce560025490565b11610cef57600080fd5b8015610d5857610d0f610d0160025490565b61069b83600160801b6113a9565b60055560405181815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a54610d549082611432565b600a555b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6010546001600160a01b03163314610d9d57600080fd5b6001600160a01b03821660009081526011602052604090205460ff16610eef577f00000000000000000000000000000000000000000000000000000000000000008110610e6c57610dee82826116f1565b604051632f0ad01760e21b8152600b60048201526001600160a01b03831660248201526044810182905273__$177dccba129b0d637dd8098c685ac510bf$__9063bc2b405c9060640160006040518083038186803b158015610e4f57600080fd5b505af4158015610e63573d6000803e3d6000fd5b50505050610ee2565b610e778260006116f1565b60405163131836e760e21b815273__$177dccba129b0d637dd8098c685ac510bf$__90634c60db9c90610eb190600b908690600401611e6e565b60006040518083038186803b158015610ec957600080fd5b505af4158015610edd573d6000803e3d6000fd5b505050505b610eed826001610c3f565b505b5050565b6010546001600160a01b03163314610f0a57600080fd5b610e108110158015610f1f5750620151808111155b610fa95760405162461bcd60e51b815260206004820152604f60248201527f54657374546f6b656e5f4469766964656e645f547261636b65723a20636c616960448201527f6d57616974206d757374206265207570646174656420746f206265747765656e60648201526e203120616e6420323420686f75727360881b608482015260a401610b4c565b601354810361102a5760405162461bcd60e51b815260206004820152604160248201527f54657374546f6b656e5f4469766964656e645f547261636b65723a2043616e6e60448201527f6f742075706461746520636c61696d5761697420746f2073616d652076616c756064820152606560f81b608482015260a401610b4c565b60135460405182907f474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f90600090a3601355565b6010546001600160a01b0316331461107457600080fd5b6001600160a01b0381166110d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b4c565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600080600080600080889750600b73__$177dccba129b0d637dd8098c685ac510bf$__6317e142d190918a6040518363ffffffff1660e01b8152600401611176929190611e6e565b602060405180830381865af4158015611193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b79190611e9d565b965060001995506000871261121957600f548711156111e557600f546111de90889061190b565b9550611219565b600f54600b54600091106111fa576000611209565b600f54600b5461120991611744565b905061121588826116a0565b9650505b61122288610c05565b945061122d886107c9565b6001600160a01b038916600090815260126020526040902054909450925082611257576000611265565b601354611265908490611432565b915042821161127557600061127f565b61127f8242611744565b9050919395975091939597565b600b54600090819081908082036112ae575050600f54600092508291506113a2565b600f546000805a90506000805b89841080156112c957508582105b1561139157846112d881611ed3565b600b54909650861090506112eb57600094505b6000600b600001868154811061130357611303611eec565b60009182526020808320909101546001600160a01b0316808352601290915260409091205490915061133490611957565b1561135757611344816001610c3f565b15611357578161135381611ed3565b9250505b8261136181611ed3565b93505060005a9050808511156113885761138561137e8683611744565b8790611432565b95505b93506112bb9050565b600f85905590975095509193505050505b9193909250565b6000826000036113bb5750600061079f565b60006113c78385611f02565b9050826113d48583611e12565b1461142b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610b4c565b9392505050565b60008061143f8385611e85565b90508381101561142b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b4c565b6001600160a01b0383166114f35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b4c565b6001600160a01b0382166115545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b4c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006115c18484610d5b565b90506000198114611629578181101561161c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b4c565b6116298484848403611491565b50505050565b60405162461bcd60e51b815260206004820152603060248201527f54657374546f6b656e5f4469766964656e645f547261636b65723a204e6f207460448201526f1c985b9cd9995c9cc8185b1b1bddd95960821b6064820152608401610b4c565b6000818181121561079f57600080fd5b6000806116ad8385611f21565b9050600083121580156116c05750838112155b806116d557506000831280156116d557508381125b61142b57600080fd5b6000808212156116ed57600080fd5b5090565b60006116fc83610b55565b9050808211156117245760006117128383611744565b905061171e848261197e565b50610eed565b80821015610eed5760006117388284611744565b905061162984826119e2565b6000828211156117965760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610b4c565b61142b8284611f62565b6000806117ac83610c05565b90508015611902576001600160a01b0383166000908152600960205260409020546117d79082611432565b6001600160a01b038416600081815260096020526040908190209290925590517fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d906118269084815260200190565b60405180910390a26007546040516323b872dd60e01b81523060048201526001600160a01b0385811660248301526044820184905260009216906323b872dd906064016020604051808303816000875af1158015611888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ac9190611f79565b9050806118fb576001600160a01b0384166000908152600960205260409020546118d69083611744565b6001600160a01b03909416600090815260096020526040812094909455509192915050565b5092915050565b50600092915050565b60008082121580156119265750826119238382611f96565b13155b8061194457506000821280156119445750826119428382611f96565b135b61194d57600080fd5b61142b8284611f96565b60004282111561196957506000919050565b6013546119764284611744565b101592915050565b6119888282611a26565b6119c26119a3610808836005546113a990919063ffffffff16565b6001600160a01b0384166000908152600860205260409020549061190b565b6001600160a01b0390921660009081526008602052604090209190915550565b6119ec8282611b19565b6119c2611a07610808836005546113a990919063ffffffff16565b6001600160a01b038416600090815260086020526040902054906116a0565b6001600160a01b038216611a7c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b4c565b611a8860008383610eed565b8060026000828254611a9a9190611e85565b90915550506001600160a01b03821660009081526020819052604081208054839290611ac7908490611e85565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610eef60008383610eed565b6001600160a01b038216611b795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b4c565b611b8582600083610eed565b6001600160a01b03821660009081526020819052604090205481811015611bf95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b4c565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611c28908490611f62565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610eed83600084610eed565b600060208083528351808285015260005b81811015611ca757858101830151858201604001528201611c8b565b81811115611cb9576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610d5857600080fd5b60008060408385031215611cf757600080fd5b8235611d0281611ccf565b946020939093013593505050565b600060208284031215611d2257600080fd5b813561142b81611ccf565b600080600060608486031215611d4257600080fd5b8335611d4d81611ccf565b92506020840135611d5d81611ccf565b929592945050506040919091013590565b600060208284031215611d8057600080fd5b5035919050565b8015158114610d5857600080fd5b60008060408385031215611da857600080fd5b8235611db381611ccf565b91506020830135611dc381611d87565b809150509250929050565b60008060408385031215611de157600080fd5b8235611dec81611ccf565b91506020830135611dc381611ccf565b634e487b7160e01b600052601160045260246000fd5b600082611e2f57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680611e4857607f821691505b602082108103611e6857634e487b7160e01b600052602260045260246000fd5b50919050565b9182526001600160a01b0316602082015260400190565b60008219821115611e9857611e98611dfc565b500190565b600060208284031215611eaf57600080fd5b5051919050565b600060208284031215611ec857600080fd5b815161142b81611ccf565b600060018201611ee557611ee5611dfc565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611f1c57611f1c611dfc565b500290565b600080821280156001600160ff1b0384900385131615611f4357611f43611dfc565b600160ff1b8390038412811615611f5c57611f5c611dfc565b50500190565b600082821015611f7457611f74611dfc565b500390565b600060208284031215611f8b57600080fd5b815161142b81611d87565b60008083128015600160ff1b850184121615611fb457611fb4611dfc565b6001600160ff1b0384018313811615611fcf57611fcf611dfc565b5050039056fea2646970667358221220a452191c5212a832d71ce0ab83491699dbceeed1ef349f51dac174a58c2d92ae64736f6c634300080d0033";

type HermesDividendTrackerConstructorParams =
  | [
      linkLibraryAddresses: HermesDividendTrackerLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HermesDividendTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class HermesDividendTracker__factory extends ContractFactory {
  constructor(...args: HermesDividendTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        HermesDividendTracker__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: HermesDividendTrackerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$177dccba129b0d637dd8098c685ac510bf\\$__", "g"),
      linkLibraryAddresses[
        "contracts/HermesDividendTracker.sol:IterableMapping"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _distributionTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HermesDividendTracker> {
    return super.deploy(
      _distributionTokenAddress,
      overrides || {}
    ) as Promise<HermesDividendTracker>;
  }
  getDeployTransaction(
    _distributionTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _distributionTokenAddress,
      overrides || {}
    );
  }
  attach(address: string): HermesDividendTracker {
    return super.attach(address) as HermesDividendTracker;
  }
  connect(signer: Signer): HermesDividendTracker__factory {
    return super.connect(signer) as HermesDividendTracker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HermesDividendTrackerInterface {
    return new utils.Interface(_abi) as HermesDividendTrackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HermesDividendTracker {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HermesDividendTracker;
  }
}

export interface HermesDividendTrackerLibraryAddresses {
  ["contracts/HermesDividendTracker.sol:IterableMapping"]: string;
}
