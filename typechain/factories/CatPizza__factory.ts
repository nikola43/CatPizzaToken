/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CatPizza, CatPizzaInterface } from "../CatPizza";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEAD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_feesRates",
    outputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "autoLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "excludeFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setMarketingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxTransactionAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxWalletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setSwapThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    name: "setTaxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600881526743617450697a7a6160c01b6020808301918252835180850190945260048452630436174560e41b9084015281519192916200005e91600391620005bc565b50805162000074906004906020840190620005bc565b50505062000094336a52b7d2dcc80cd2e4000000620003ab60201b60201c565b69d3c21bcecceda1000000600c819055600f819055600580546001600160a01b031990811633908117909255600980548216736644ebde0f26c8f74ad18697cce8a5ac4e608cb41781556040805160608101825261012c80825260208083019190915260009183018290526014805465ffffffffffff191663012c012c1790556008805486167378867bbeef44f2326bf8ddd1941a4439382ef2a717815595825260118152828220805460ff199081166001908117909255308452848420805482168317905594546001600160a01b039081168452848420805487168317905596549096168252908290208054909316909417909155600a93909355611b58600d55610bb8600e5560138054909116739ac64cc6e4415144c455bd8e4837fea55603e5c3908117909155825163c45a015560e01b815292519092839263c45a0155926004838101938290030181865afa158015620001f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021c919062000662565b6001600160a01b031663c9c6539630601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200027f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a5919062000662565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620002f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000319919062000662565b600780546001600160a01b0319166001600160a01b039290921691821790556000908152601260205260409020805460ff1916600117905562000360338260001962000494565b6200036f308260001962000494565b6008546200038a906001600160a01b03168260001962000494565b50600680546001600160a01b03191661dead179055612710600b55620006f7565b6001600160a01b038216620004075760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200041b919062000694565b90915550506001600160a01b038216600090815260208190526040812080548392906200044a90849062000694565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316620004f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401620003fe565b6001600160a01b0382166200055b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401620003fe565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828054620005ca90620006bb565b90600052602060002090601f016020900481019282620005ee576000855562000639565b82601f106200060957805160ff191683800117855562000639565b8280016001018555821562000639579182015b82811115620006395782518255916020019190600101906200061c565b50620006479291506200064b565b5090565b5b808211156200064757600081556001016200064c565b6000602082840312156200067557600080fd5b81516001600160a01b03811681146200068d57600080fd5b9392505050565b60008219821115620006b657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620006d057607f821691505b602082108103620006f157634e487b7160e01b600052602260045260246000fd5b50919050565b611e9280620007076000396000f3fe60806040526004361061019c5760003560e01c80635342acb4116100e2578063a5ece94111610085578063a5ece941146104f0578063a9059cbb14610510578063b62496f514610530578063c6aca36b14610560578063dd62ed3e14610580578063df8408fe146105a0578063f2fde38b146105c0578063f36f79e0146105e057600080fd5b80635342acb4146103e457806370a082311461041d578063893d20e81461043d5780638da5cb5b1461045b578063906e9dd01461047b57806395d89b411461049b5780639d0014b1146104b0578063a457c2d7146104d057600080fd5b80631e293c101161014a5780631e293c10146102e657806323b872dd1461030857806327a14fc214610328578063313ce5671461034857806332cde66414610364578063395093511461038457806342966c68146103a4578063452ed4f1146103c457600080fd5b806303fd2a45146101a85780630445b667146101e557806306fdde03146102095780630758d9241461022b578063095ea7b31461024b57806318160ddd1461027b5780631c06a7e11461029057600080fd5b366101a357005b600080fd5b3480156101b457600080fd5b506006546101c8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101f157600080fd5b506101fb600a5481565b6040519081526020016101dc565b34801561021557600080fd5b5061021e610600565b6040516101dc9190611a99565b34801561023757600080fd5b506013546101c8906001600160a01b031681565b34801561025757600080fd5b5061026b610266366004611b06565b610692565b60405190151581526020016101dc565b34801561028757600080fd5b506002546101fb565b34801561029c57600080fd5b506014546102c19061ffff808216916201000081048216916401000000009091041683565b6040805161ffff948516815292841660208401529216918101919091526060016101dc565b3480156102f257600080fd5b50610306610301366004611b32565b6106aa565b005b34801561031457600080fd5b5061026b610323366004611b4b565b6106e2565b34801561033457600080fd5b50610306610343366004611b32565b610706565b34801561035457600080fd5b50604051601281526020016101dc565b34801561037057600080fd5b5061030661037f366004611ba3565b610735565b34801561039057600080fd5b5061026b61039f366004611b06565b61079e565b3480156103b057600080fd5b506103066103bf366004611b32565b6107c0565b3480156103d057600080fd5b506007546101c8906001600160a01b031681565b3480156103f057600080fd5b5061026b6103ff366004611be6565b6001600160a01b031660009081526011602052604090205460ff1690565b34801561042957600080fd5b506101fb610438366004611be6565b610872565b34801561044957600080fd5b506005546001600160a01b03166101c8565b34801561046757600080fd5b506005546101c8906001600160a01b031681565b34801561048757600080fd5b50610306610496366004611be6565b61088d565b3480156104a757600080fd5b5061021e6108d9565b3480156104bc57600080fd5b506103066104cb366004611b32565b6108e8565b3480156104dc57600080fd5b5061026b6104eb366004611b06565b610917565b3480156104fc57600080fd5b506009546101c8906001600160a01b031681565b34801561051c57600080fd5b5061026b61052b366004611b06565b610992565b34801561053c57600080fd5b5061026b61054b366004611be6565b60126020526000908152604090205460ff1681565b34801561056c57600080fd5b5061030661057b366004611b32565b6109a0565b34801561058c57600080fd5b506101fb61059b366004611c03565b6109d7565b3480156105ac57600080fd5b506103066105bb366004611c4a565b610a02565b3480156105cc57600080fd5b506103066105db366004611be6565b610a57565b3480156105ec57600080fd5b506008546101c8906001600160a01b031681565b60606003805461060f90611c78565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90611c78565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b5050505050905090565b6000336106a0818585610aa3565b5060019392505050565b6005546001600160a01b031633146106dd5760405162461bcd60e51b81526004016106d490611cb2565b60405180910390fd5b600f55565b6000336106f0858285610bc7565b6106fb858585610c3b565b506001949350505050565b6005546001600160a01b031633146107305760405162461bcd60e51b81526004016106d490611cb2565b600c55565b6005546001600160a01b0316331461075f5760405162461bcd60e51b81526004016106d490611cb2565b6014805461ffff94851663ffffffff199091161762010000938516939093029290921765ffff0000000019166401000000009190931602919091179055565b6000336106a08185856107b183836109d7565b6107bb9190611cfd565b610aa3565b6107c933610872565b8111156108305760405162461bcd60e51b815260206004820152602f60248201527f4275726e20616d6f756e742073686f756c64206265206c657373207468616e2060448201526e6163636f756e742062616c616e636560881b60648201526084016106d4565b61083a3382610cfe565b60405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b031633146108b75760405162461bcd60e51b81526004016106d490611cb2565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461060f90611c78565b6005546001600160a01b031633146109125760405162461bcd60e51b81526004016106d490611cb2565b600a55565b6000338161092582866109d7565b9050838110156109855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d4565b6106fb8286868403610aa3565b6000336106a0818585610c3b565b60006109ad600283611d15565b9050476109b982610e4c565b60006109c58247611d37565b90506109d18382610faf565b50505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610a2c5760405162461bcd60e51b81526004016106d490611cb2565b6001600160a01b03919091166000908152601160205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610a815760405162461bcd60e51b81526004016106d490611cb2565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610b055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d4565b6001600160a01b038216610b665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610bd384846109d7565b905060001981146109d15781811015610c2e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d4565b6109d18484848403610aa3565b610c4683838361108b565b60105460ff1615610c6157610c5c8383836113b3565b505050565b610c6b8383611581565b15610c7857610c78611631565b60016000610c868585611699565b6001600160a01b03861660009081526011602052604090205490915060ff1680610cc857506001600160a01b03841660009081526011602052604090205460ff165b15610cd257600091505b8080610cdc575081155b15610cf357610cec8585856113b3565b5050505050565b610cec8585856116cf565b6001600160a01b038216610d5e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106d4565b6001600160a01b03821660009081526020819052604090205481811015610dd25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106d4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610e01908490611d37565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110610e8157610e81611d4e565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611d64565b81600181518110610f1157610f11611d4e565b6001600160a01b039283166020918202929092010152601354610f379130911684610aa3565b6013546001600160a01b031663791ac9478360008430610f59426103e8611cfd565b6040518663ffffffff1660e01b8152600401610f79959493929190611d81565b600060405180830381600087803b158015610f9357600080fd5b505af1158015610fa7573d6000803e3d6000fd5b505050505050565b601354610fc99030906001600160a01b0316600019610aa3565b6013546005546001600160a01b039182169163f305d71991849130918791600091829116610ff942612710611cfd565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c40160606040518083038185885af1158015611066573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cec9190611df2565b6001600160a01b0383166110f75760405162461bcd60e51b815260206004820152602d60248201527f45524332303a207472616e736665722066726f6d20746865205a45524f5f414460448201526c4452455353206164647265737360981b60648201526084016106d4565b6001600160a01b0382166111615760405162461bcd60e51b815260206004820152602b60248201527f45524332303a207472616e7366657220746f20746865205a45524f5f4144445260448201526a455353206164647265737360a81b60648201526084016106d4565b600081116111cb5760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152707468616e205a45524f5f4144445245535360781b60648201526084016106d4565b6005546001600160a01b038481169116148015906111f757506005546001600160a01b03838116911614155b801561120b57506001600160a01b03821615155b801561122257506001600160a01b03821661dead14155b8015611231575060105460ff16155b15610c5c576001600160a01b03831660009081526012602052604090205460ff161561132157600f548111156112c75760405162461bcd60e51b815260206004820152603560248201527f427579207472616e7366657220616d6f756e742065786365656473207468652060448201527436b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760591b60648201526084016106d4565b600c546112d383610872565b6112dd9083611cfd565b1115610c5c5760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b60448201526064016106d4565b6001600160a01b03821660009081526012602052604090205460ff16156112c757600f54811115610c5c5760405162461bcd60e51b815260206004820152603660248201527f53656c6c207472616e7366657220616d6f756e742065786365656473207468656044820152751036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760511b60648201526084016106d4565b6001600160a01b0383166114175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d4565b6001600160a01b0382166114795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d4565b6001600160a01b038316600090815260208190526040902054818110156114f15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611528908490611cfd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161157491815260200190565b60405180910390a36109d1565b60008061158d30610872565b9050600a5481101580156115a4575060105460ff16155b80156115be57506007546001600160a01b03858116911614155b80156115df57506007546000906115dd906001600160a01b0316610872565b115b801561160457506001600160a01b03831660009081526011602052604090205460ff16155b801561162957506001600160a01b03841660009081526011602052604090205460ff16155b949350505050565b6010805460ff19166001179055600061164930610872565b905061166e600b54600d548361165f9190611e20565b6116699190611d15565b611758565b61168c600b54600e54836116829190611e20565b61057b9190611d15565b506010805460ff19169055565b6007546000906001600160a01b038481169116148015906116c857506007546001600160a01b03838116911614155b9392505050565b6001600160a01b03831660009081526011602052604081205482919060019060ff168061171457506001600160a01b03851660009081526011602052604090205460ff165b1561171d575060005b801561174d5761172e8686866119f4565b9150811561174d576117408285611d37565b925061174d8630846113b3565b610fa78686856113b3565b6040805160038082526080820190925260009160208201606080368337019050509050308160008151811061178f5761178f611d4e565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190611d64565b8160018151811061181f5761181f611d4e565b6001600160a01b03928316602091820292909201015260085482519116908290600290811061185057611850611d4e565b6001600160a01b03928316602091820292909201015260085460135460405163095ea7b360e01b81529083166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156118b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d89190611e3f565b50601360009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119509190611d64565b60135460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156119a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c79190611e3f565b506013546009546001600160a01b0391821691635c11d795918591600091869116610f59426103e8611cfd565b600754600090819081906001600160a01b03808816911603611a2857601454611a219061ffff1683611cfd565b9150611a70565b6007546001600160a01b03808716911603611a5457601454611a219062010000900461ffff1683611cfd565b601454611a6d90640100000000900461ffff1683611cfd565b91505b8115611a9057600b54611a838386611e20565b611a8d9190611d15565b90505b95945050505050565b600060208083528351808285015260005b81811015611ac657858101830151858201604001528201611aaa565b81811115611ad8576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611b0357600080fd5b50565b60008060408385031215611b1957600080fd5b8235611b2481611aee565b946020939093013593505050565b600060208284031215611b4457600080fd5b5035919050565b600080600060608486031215611b6057600080fd5b8335611b6b81611aee565b92506020840135611b7b81611aee565b929592945050506040919091013590565b803561ffff81168114611b9e57600080fd5b919050565b600080600060608486031215611bb857600080fd5b611bc184611b8c565b9250611bcf60208501611b8c565b9150611bdd60408501611b8c565b90509250925092565b600060208284031215611bf857600080fd5b81356116c881611aee565b60008060408385031215611c1657600080fd5b8235611c2181611aee565b91506020830135611c3181611aee565b809150509250929050565b8015158114611b0357600080fd5b60008060408385031215611c5d57600080fd5b8235611c6881611aee565b91506020830135611c3181611c3c565b600181811c90821680611c8c57607f821691505b602082108103611cac57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611d1057611d10611ce7565b500190565b600082611d3257634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611d4957611d49611ce7565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611d7657600080fd5b81516116c881611aee565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611dd15784516001600160a01b031683529383019391830191600101611dac565b50506001600160a01b03969096166060850152505050608001529392505050565b600080600060608486031215611e0757600080fd5b8351925060208401519150604084015190509250925092565b6000816000190483118215151615611e3a57611e3a611ce7565b500290565b600060208284031215611e5157600080fd5b81516116c881611c3c56fea2646970667358221220b3c50f007e12eb80b82b41001ca47fb4edc4025a7cd7847eb0d38ac273a914cf64736f6c634300080d0033";

export class CatPizza__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CatPizza> {
    return super.deploy(overrides || {}) as Promise<CatPizza>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CatPizza {
    return super.attach(address) as CatPizza;
  }
  connect(signer: Signer): CatPizza__factory {
    return super.connect(signer) as CatPizza__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CatPizzaInterface {
    return new utils.Interface(_abi) as CatPizzaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CatPizza {
    return new Contract(address, _abi, signerOrProvider) as CatPizza;
  }
}
