/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CatPizza, CatPizzaInterface } from "../../contracts/CatPizza";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEAD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_feesRates",
    outputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "autoLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "excludeFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxTransactionAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxWalletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setSwapThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    name: "setTaxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "w1Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w3Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w4Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w5Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020016743617450697a7a6160c01b815250604051806040016040528060048152602001630436174560e41b815250816003908162000061919062000671565b50600462000070828262000671565b50505062000090336a52b7d2dcc80cd2e4000000620003b760201b60201c565b69d3c21bcecceda10000006010819055601781905560058054336001600160a01b0319918216811790925560098054736644ebde0f26c8f74ad18697cce8a5ac4e608cb49083168117909155600a8054831682179055600b8054831682179055600c8054831682179055600d80548316909117905560408051606081018252600080825261012c602080840191909152918301819052601c805463012c000065ffffffffffff19909116179055600880547378867bbeef44f2326bf8ddd1941a4439382ef2a790861617905593845260198152818420805460ff19908116600190811790925530865294839020805490951617909355600e939093556103e860118190556012819055601381905560148190556015819055601655601b8054739ac64cc6e4415144c455bd8e4837fea55603e5c3921682179055825163c45a015560e01b815292519092839263c45a0155926004838101938290030181865afa15801562000202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022891906200073d565b6001600160a01b031663c9c6539630601b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200028b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b191906200073d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620002ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032591906200073d565b600780546001600160a01b0319166001600160a01b039290921691821790556000908152601a60205260409020805460ff191660011790556200036c3382600019620004a0565b6200037b3082600019620004a0565b60085462000396906001600160a01b031682600019620004a0565b50600680546001600160a01b03191661dead179055612710600f5562000796565b6001600160a01b038216620004135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200042791906200076f565b90915550506001600160a01b03821660009081526020819052604081208054839290620004569084906200076f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316620005045760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200040a565b6001600160a01b038216620005675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200040a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005f857607f821691505b6020821081036200061957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005c857600081815260208120601f850160051c81016020861015620006485750805b601f850160051c820191505b81811015620006695782815560010162000654565b505050505050565b81516001600160401b038111156200068d576200068d620005cd565b620006a5816200069e8454620005e3565b846200061f565b602080601f831160018114620006dd5760008415620006c45750858301515b600019600386901b1c1916600185901b17855562000669565b600085815260208120601f198616915b828110156200070e57888601518255948401946001909101908401620006ed565b50858210156200072d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200075057600080fd5b81516001600160a01b03811681146200076857600080fd5b9392505050565b600082198211156200079157634e487b7160e01b600052601160045260246000fd5b500190565b6120fc80620007a66000396000f3fe6080604052600436106102085760003560e01c8063578aaa0011610118578063a457c2d7116100a0578063c6aca36b1161006f578063c6aca36b14610657578063dd62ed3e14610677578063df8408fe14610697578063f2fde38b146106b7578063f36f79e0146106d757600080fd5b8063a457c2d7146105c7578063a9059cbb146105e7578063adb3b63514610607578063b62496f51461062757600080fd5b8063893d20e8116100e7578063893d20e81461053f5780638a8c523c1461055d5780638da5cb5b1461057257806395d89b41146105925780639d0014b1146105a757600080fd5b8063578aaa00146104a95780635932959c146104c95780636f3433d4146104e957806370a082311461050957600080fd5b806323b872dd1161019b578063395093511161016a57806339509351146103f057806339d915f11461041057806342966c6814610430578063452ed4f1146104505780635342acb41461047057600080fd5b806323b872dd1461037457806327a14fc214610394578063313ce567146103b457806332cde664146103d057600080fd5b8063095ea7b3116101d7578063095ea7b3146102b757806318160ddd146102e75780631c06a7e1146102fc5780631e293c101461035257600080fd5b806303fd2a45146102145780630445b6671461025157806306fdde03146102755780630758d9241461029757600080fd5b3661020f57005b600080fd5b34801561022057600080fd5b50600654610234906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561025d57600080fd5b50610267600e5481565b604051908152602001610248565b34801561028157600080fd5b5061028a6106f7565b6040516102489190611cd6565b3480156102a357600080fd5b50601b54610234906001600160a01b031681565b3480156102c357600080fd5b506102d76102d2366004611d43565b610789565b6040519015158152602001610248565b3480156102f357600080fd5b50600254610267565b34801561030857600080fd5b50601c5461032d9061ffff808216916201000081048216916401000000009091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610248565b34801561035e57600080fd5b5061037261036d366004611d6f565b6107a1565b005b34801561038057600080fd5b506102d761038f366004611d88565b6107d9565b3480156103a057600080fd5b506103726103af366004611d6f565b6107fd565b3480156103c057600080fd5b5060405160128152602001610248565b3480156103dc57600080fd5b506103726103eb366004611de0565b61082c565b3480156103fc57600080fd5b506102d761040b366004611d43565b6109d4565b34801561041c57600080fd5b50600b54610234906001600160a01b031681565b34801561043c57600080fd5b5061037261044b366004611d6f565b6109f6565b34801561045c57600080fd5b50600754610234906001600160a01b031681565b34801561047c57600080fd5b506102d761048b366004611e23565b6001600160a01b031660009081526019602052604090205460ff1690565b3480156104b557600080fd5b50600d54610234906001600160a01b031681565b3480156104d557600080fd5b50600954610234906001600160a01b031681565b3480156104f557600080fd5b50600a54610234906001600160a01b031681565b34801561051557600080fd5b50610267610524366004611e23565b6001600160a01b031660009081526020819052604090205490565b34801561054b57600080fd5b506005546001600160a01b0316610234565b34801561056957600080fd5b50610372610aaf565b34801561057e57600080fd5b50600554610234906001600160a01b031681565b34801561059e57600080fd5b5061028a610b42565b3480156105b357600080fd5b506103726105c2366004611d6f565b610b51565b3480156105d357600080fd5b506102d76105e2366004611d43565b610b80565b3480156105f357600080fd5b506102d7610602366004611d43565b610bfb565b34801561061357600080fd5b50600c54610234906001600160a01b031681565b34801561063357600080fd5b506102d7610642366004611e23565b601a6020526000908152604090205460ff1681565b34801561066357600080fd5b50610372610672366004611d6f565b610c09565b34801561068357600080fd5b50610267610692366004611e47565b610c40565b3480156106a357600080fd5b506103726106b2366004611e8e565b610c6b565b3480156106c357600080fd5b506103726106d2366004611e23565b610cc0565b3480156106e357600080fd5b50600854610234906001600160a01b031681565b60606003805461070690611ebc565b80601f016020809104026020016040519081016040528092919081815260200182805461073290611ebc565b801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b5050505050905090565b600033610797818585610d0c565b5060019392505050565b6005546001600160a01b031633146107d45760405162461bcd60e51b81526004016107cb90611ef6565b60405180910390fd5b601755565b6000336107e7858285610e30565b6107f2858585610ea4565b506001949350505050565b6005546001600160a01b031633146108275760405162461bcd60e51b81526004016107cb90611ef6565b601055565b6005546001600160a01b031633146108565760405162461bcd60e51b81526004016107cb90611ef6565b610bb88361ffff16111561089b5760405162461bcd60e51b815260206004820152600c60248201526b4d415820425559204645455360a01b60448201526064016107cb565b610bb88261ffff1611156108e15760405162461bcd60e51b815260206004820152600d60248201526c4d41582053454c4c204645455360981b60448201526064016107cb565b610bb88161ffff16111561092b5760405162461bcd60e51b81526020600482015260116024820152704d4158205452414e53464552204645455360781b60448201526064016107cb565b610bb8816109398486611f41565b6109439190611f41565b61ffff1611156109955760405162461bcd60e51b815260206004820152601c60248201527f4d4158204255592c2053454c4c2c205452414e5346455220464545530000000060448201526064016107cb565b601c805461ffff94851663ffffffff199091161762010000938516939093029290921765ffff0000000019166401000000009190931602919091179055565b6000336107978185856109e78383610c40565b6109f19190611f67565b610d0c565b33600090815260208190526040902054811115610a6d5760405162461bcd60e51b815260206004820152602f60248201527f4275726e20616d6f756e742073686f756c64206265206c657373207468616e2060448201526e6163636f756e742062616c616e636560881b60648201526084016107cb565b610a773382610f6c565b60405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250565b6005546001600160a01b03163314610ad95760405162461bcd60e51b81526004016107cb90611ef6565b601854610100900460ff1615610b315760405162461bcd60e51b815260206004820152601e60248201527f54726164696e67456e61626c656420616c72656164792061637469766564000060448201526064016107cb565b6018805461ff001916610100179055565b60606004805461070690611ebc565b6005546001600160a01b03163314610b7b5760405162461bcd60e51b81526004016107cb90611ef6565b600e55565b60003381610b8e8286610c40565b905083811015610bee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107cb565b6107f28286868403610d0c565b600033610797818585610ea4565b6000610c16600283611f7f565b905047610c22826110ba565b6000610c2e8247611fa1565b9050610c3a838261121d565b50505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610c955760405162461bcd60e51b81526004016107cb90611ef6565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610cea5760405162461bcd60e51b81526004016107cb90611ef6565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610d6e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107cb565b6001600160a01b038216610dcf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e3c8484610c40565b90506000198114610c3a5781811015610e975760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107cb565b610c3a8484848403610d0c565b610eaf838383611300565b60185460ff1615610eca57610ec5838383611684565b505050565b610ed48383611852565b15610f6157306000908152602081905260408120549050610f41600f54601554601454601354601254601154610f0a9190611f67565b610f149190611f67565b610f1e9190611f67565b610f289190611f67565b610f329084611fb8565b610f3c9190611f7f565b611907565b610f5f600f5460165483610f559190611fb8565b6106729190611f7f565b505b610ec5838383611b99565b6001600160a01b038216610fcc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107cb565b6001600160a01b038216600090815260208190526040902054818110156110405760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107cb565b6001600160a01b038316600090815260208190526040812083830390556002805484929061106f908490611fa1565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106110ef576110ef611fd7565b6001600160a01b03928316602091820292909201810191909152601b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190611fed565b8160018151811061117f5761117f611fd7565b6001600160a01b039283166020918202929092010152601b546111a59130911684610d0c565b601b546001600160a01b031663791ac94783600084306111c7426103e8611f67565b6040518663ffffffff1660e01b81526004016111e795949392919061200a565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b505050505050565b601b546112379030906001600160a01b0316600019610d0c565b601b546005546001600160a01b039182169163f305d7199184913091879160009182911661126742612710611f67565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c40160606040518083038185885af11580156112d4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112f9919061207b565b5050505050565b6001600160a01b03831661136c5760405162461bcd60e51b815260206004820152602d60248201527f45524332303a207472616e736665722066726f6d20746865205a45524f5f414460448201526c4452455353206164647265737360981b60648201526084016107cb565b6001600160a01b0382166113d65760405162461bcd60e51b815260206004820152602b60248201527f45524332303a207472616e7366657220746f20746865205a45524f5f4144445260448201526a455353206164647265737360a81b60648201526084016107cb565b600081116114405760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152707468616e205a45524f5f4144445245535360781b60648201526084016107cb565b6005546001600160a01b0384811691161480159061146c57506005546001600160a01b03838116911614155b801561148057506001600160a01b03821615155b801561149757506001600160a01b03821661dead14155b80156114a6575060185460ff16155b15610ec557601854610100900460ff166114f75760405162461bcd60e51b815260206004820152601260248201527154726164696e67206e6f742061637469766560701b60448201526064016107cb565b6001600160a01b0383166000908152601a602052604090205460ff16156115f2576017548111156115885760405162461bcd60e51b815260206004820152603560248201527f427579207472616e7366657220616d6f756e742065786365656473207468652060448201527436b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760591b60648201526084016107cb565b6010546001600160a01b0383166000908152602081905260409020546115ae9083611f67565b1115610ec55760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b60448201526064016107cb565b6001600160a01b0382166000908152601a602052604090205460ff161561158857601754811115610ec55760405162461bcd60e51b815260206004820152603660248201527f53656c6c207472616e7366657220616d6f756e742065786365656473207468656044820152751036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760511b60648201526084016107cb565b6001600160a01b0383166116e85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107cb565b6001600160a01b03821661174a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107cb565b6001600160a01b038316600090815260208190526040902054818110156117c25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107cb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906117f9908490611f67565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161184591815260200190565b60405180910390a3610c3a565b30600090815260208190526040812054600e548110158015611877575060185460ff16155b801561189157506007546001600160a01b03858116911614155b80156118b557506007546001600160a01b0316600090815260208190526040812054115b80156118da57506001600160a01b03831660009081526019602052604090205460ff16155b80156118ff57506001600160a01b03841660009081526019602052604090205460ff16155b949350505050565b6040805160038082526080820190925260009160208201606080368337019050509050308160008151811061193e5761193e611fd7565b6001600160a01b03928316602091820292909201810191909152601b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb9190611fed565b816001815181106119ce576119ce611fd7565b6001600160a01b0392831660209182029290920101526008548251911690829060029081106119ff576119ff611fd7565b6001600160a01b039283166020918202929092010152600854601b5460405163095ea7b360e01b81529083166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8791906120a9565b50601b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190611fed565b601b5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7691906120a9565b50601b546001600160a01b0316635c11d79583600084306111c7426103e8611f67565b6001600160a01b03831660009081526019602052604081205482919060019060ff1680611bde57506001600160a01b03851660009081526019602052604090205460ff165b15611be7575060005b8015611c1157611bf8868686611c1c565b9150611c048285611fa1565b9250611c11863084611684565b611215868685611684565b6001600160a01b0383166000908152601a60205260408120548190819060ff1615611c5957601c54611c529061ffff1683611f67565b9150611cad565b6001600160a01b0385166000908152601a602052604090205460ff1615611c9157601c54611c529062010000900461ffff1683611f67565b601c54611caa90640100000000900461ffff1683611f67565b91505b8115611ccd57600f54611cc08386611fb8565b611cca9190611f7f565b90505b95945050505050565b600060208083528351808285015260005b81811015611d0357858101830151858201604001528201611ce7565b81811115611d15576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611d4057600080fd5b50565b60008060408385031215611d5657600080fd5b8235611d6181611d2b565b946020939093013593505050565b600060208284031215611d8157600080fd5b5035919050565b600080600060608486031215611d9d57600080fd5b8335611da881611d2b565b92506020840135611db881611d2b565b929592945050506040919091013590565b803561ffff81168114611ddb57600080fd5b919050565b600080600060608486031215611df557600080fd5b611dfe84611dc9565b9250611e0c60208501611dc9565b9150611e1a60408501611dc9565b90509250925092565b600060208284031215611e3557600080fd5b8135611e4081611d2b565b9392505050565b60008060408385031215611e5a57600080fd5b8235611e6581611d2b565b91506020830135611e7581611d2b565b809150509250929050565b8015158114611d4057600080fd5b60008060408385031215611ea157600080fd5b8235611eac81611d2b565b91506020830135611e7581611e80565b600181811c90821680611ed057607f821691505b602082108103611ef057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611f5e57611f5e611f2b565b01949350505050565b60008219821115611f7a57611f7a611f2b565b500190565b600082611f9c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611fb357611fb3611f2b565b500390565b6000816000190483118215151615611fd257611fd2611f2b565b500290565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611fff57600080fd5b8151611e4081611d2b565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561205a5784516001600160a01b031683529383019391830191600101612035565b50506001600160a01b03969096166060850152505050608001529392505050565b60008060006060848603121561209057600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156120bb57600080fd5b8151611e4081611e8056fea26469706673582212208cb9375c2df9263e19d4be8fa47cb44ccde726a9079ca2de7a748f4d0ca28bbb64736f6c634300080f0033";

type CatPizzaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CatPizzaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CatPizza__factory extends ContractFactory {
  constructor(...args: CatPizzaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CatPizza> {
    return super.deploy(overrides || {}) as Promise<CatPizza>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CatPizza {
    return super.attach(address) as CatPizza;
  }
  override connect(signer: Signer): CatPizza__factory {
    return super.connect(signer) as CatPizza__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CatPizzaInterface {
    return new utils.Interface(_abi) as CatPizzaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CatPizza {
    return new Contract(address, _abi, signerOrProvider) as CatPizza;
  }
}
