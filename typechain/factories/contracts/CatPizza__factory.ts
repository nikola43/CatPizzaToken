/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CatPizza, CatPizzaInterface } from "../../contracts/CatPizza";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEAD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_feesRates",
    outputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "autoLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "excludeFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxTransactionAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxWalletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setSwapThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "buyFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "sellFee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "transferFee",
        type: "uint16",
      },
    ],
    name: "setTaxes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "w1Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w3Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w4Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "w5Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600881526743617450697a7a6160c01b6020808301918252835180850190945260048452630436174560e41b9084015281519192916200005e91600391620005cc565b50805162000074906004906020840190620005cc565b50505062000094336a52b7d2dcc80cd2e4000000620003bb60201b60201c565b69d3c21bcecceda10000006010819055601781905560058054336001600160a01b0319918216811790925560098054736644ebde0f26c8f74ad18697cce8a5ac4e608cb49083168117909155600a8054831682179055600b8054831682179055600c8054831682179055600d80548316909117905560408051606081018252600080825261012c602080840191909152918301819052601c805463012c000065ffffffffffff19909116179055600880547378867bbeef44f2326bf8ddd1941a4439382ef2a790861617905593845260198152818420805460ff19908116600190811790925530865294839020805490951617909355600e939093556103e860118190556012819055601381905560148190556015819055601655601b8054739ac64cc6e4415144c455bd8e4837fea55603e5c3921682179055825163c45a015560e01b815292519092839263c45a0155926004838101938290030181865afa15801562000206573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022c919062000672565b6001600160a01b031663c9c6539630601b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200028f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b5919062000672565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000303573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000329919062000672565b600780546001600160a01b0319166001600160a01b039290921691821790556000908152601a60205260409020805460ff19166001179055620003703382600019620004a4565b6200037f3082600019620004a4565b6008546200039a906001600160a01b031682600019620004a4565b50600680546001600160a01b03191661dead179055612710600f5562000707565b6001600160a01b038216620004175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200042b9190620006a4565b90915550506001600160a01b038216600090815260208190526040812080548392906200045a908490620006a4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316620005085760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200040e565b6001600160a01b0382166200056b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200040e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828054620005da90620006cb565b90600052602060002090601f016020900481019282620005fe576000855562000649565b82601f106200061957805160ff191683800117855562000649565b8280016001018555821562000649579182015b82811115620006495782518255916020019190600101906200062c565b50620006579291506200065b565b5090565b5b808211156200065757600081556001016200065c565b6000602082840312156200068557600080fd5b81516001600160a01b03811681146200069d57600080fd5b9392505050565b60008219821115620006c657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620006e057607f821691505b6020821081036200070157634e487b7160e01b600052602260045260246000fd5b50919050565b6120a080620007176000396000f3fe6080604052600436106101c85760003560e01c8063578aaa00116100f8578063a457c2d711610090578063a457c2d714610571578063a9059cbb14610591578063adb3b635146105b1578063b62496f5146105d1578063c6aca36b14610601578063dd62ed3e14610621578063df8408fe14610641578063f2fde38b14610661578063f36f79e01461068157600080fd5b8063578aaa00146104695780635932959c146104895780636f3433d4146104a957806370a08231146104c9578063893d20e8146104e95780638a8c523c146105075780638da5cb5b1461051c57806395d89b411461053c5780639d0014b11461055157600080fd5b806323b872dd1161016b57806323b872dd1461033457806327a14fc214610354578063313ce5671461037457806332cde6641461039057806339509351146103b057806339d915f1146103d057806342966c68146103f0578063452ed4f1146104105780635342acb41461043057600080fd5b806303fd2a45146101d45780630445b6671461021157806306fdde03146102355780630758d92414610257578063095ea7b31461027757806318160ddd146102a75780631c06a7e1146102bc5780631e293c101461031257600080fd5b366101cf57005b600080fd5b3480156101e057600080fd5b506006546101f4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561021d57600080fd5b50610227600e5481565b604051908152602001610208565b34801561024157600080fd5b5061024a6106a1565b6040516102089190611c7a565b34801561026357600080fd5b50601b546101f4906001600160a01b031681565b34801561028357600080fd5b50610297610292366004611ce7565b610733565b6040519015158152602001610208565b3480156102b357600080fd5b50600254610227565b3480156102c857600080fd5b50601c546102ed9061ffff808216916201000081048216916401000000009091041683565b6040805161ffff94851681529284166020840152921691810191909152606001610208565b34801561031e57600080fd5b5061033261032d366004611d13565b61074b565b005b34801561034057600080fd5b5061029761034f366004611d2c565b610783565b34801561036057600080fd5b5061033261036f366004611d13565b6107a7565b34801561038057600080fd5b5060405160128152602001610208565b34801561039c57600080fd5b506103326103ab366004611d84565b6107d6565b3480156103bc57600080fd5b506102976103cb366004611ce7565b61097e565b3480156103dc57600080fd5b50600b546101f4906001600160a01b031681565b3480156103fc57600080fd5b5061033261040b366004611d13565b6109a0565b34801561041c57600080fd5b506007546101f4906001600160a01b031681565b34801561043c57600080fd5b5061029761044b366004611dc7565b6001600160a01b031660009081526019602052604090205460ff1690565b34801561047557600080fd5b50600d546101f4906001600160a01b031681565b34801561049557600080fd5b506009546101f4906001600160a01b031681565b3480156104b557600080fd5b50600a546101f4906001600160a01b031681565b3480156104d557600080fd5b506102276104e4366004611dc7565b610a52565b3480156104f557600080fd5b506005546001600160a01b03166101f4565b34801561051357600080fd5b50610332610a6d565b34801561052857600080fd5b506005546101f4906001600160a01b031681565b34801561054857600080fd5b5061024a610b00565b34801561055d57600080fd5b5061033261056c366004611d13565b610b0f565b34801561057d57600080fd5b5061029761058c366004611ce7565b610b3e565b34801561059d57600080fd5b506102976105ac366004611ce7565b610bb9565b3480156105bd57600080fd5b50600c546101f4906001600160a01b031681565b3480156105dd57600080fd5b506102976105ec366004611dc7565b601a6020526000908152604090205460ff1681565b34801561060d57600080fd5b5061033261061c366004611d13565b610bc7565b34801561062d57600080fd5b5061022761063c366004611deb565b610bfe565b34801561064d57600080fd5b5061033261065c366004611e32565b610c29565b34801561066d57600080fd5b5061033261067c366004611dc7565b610c7e565b34801561068d57600080fd5b506008546101f4906001600160a01b031681565b6060600380546106b090611e60565b80601f01602080910402602001604051908101604052809291908181526020018280546106dc90611e60565b80156107295780601f106106fe57610100808354040283529160200191610729565b820191906000526020600020905b81548152906001019060200180831161070c57829003601f168201915b5050505050905090565b600033610741818585610cca565b5060019392505050565b6005546001600160a01b0316331461077e5760405162461bcd60e51b815260040161077590611e9a565b60405180910390fd5b601755565b600033610791858285610dee565b61079c858585610e62565b506001949350505050565b6005546001600160a01b031633146107d15760405162461bcd60e51b815260040161077590611e9a565b601055565b6005546001600160a01b031633146108005760405162461bcd60e51b815260040161077590611e9a565b610bb88361ffff1611156108455760405162461bcd60e51b815260206004820152600c60248201526b4d415820425559204645455360a01b6044820152606401610775565b610bb88261ffff16111561088b5760405162461bcd60e51b815260206004820152600d60248201526c4d41582053454c4c204645455360981b6044820152606401610775565b610bb88161ffff1611156108d55760405162461bcd60e51b81526020600482015260116024820152704d4158205452414e53464552204645455360781b6044820152606401610775565b610bb8816108e38486611ee5565b6108ed9190611ee5565b61ffff16111561093f5760405162461bcd60e51b815260206004820152601c60248201527f4d4158204255592c2053454c4c2c205452414e534645522046454553000000006044820152606401610775565b601c805461ffff94851663ffffffff199091161762010000938516939093029290921765ffff0000000019166401000000009190931602919091179055565b6000336107418185856109918383610bfe565b61099b9190611f0b565b610cca565b6109a933610a52565b811115610a105760405162461bcd60e51b815260206004820152602f60248201527f4275726e20616d6f756e742073686f756c64206265206c657373207468616e2060448201526e6163636f756e742062616c616e636560881b6064820152608401610775565b610a1a3382610f25565b60405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03163314610a975760405162461bcd60e51b815260040161077590611e9a565b601854610100900460ff1615610aef5760405162461bcd60e51b815260206004820152601e60248201527f54726164696e67456e61626c656420616c7265616479206163746976656400006044820152606401610775565b6018805461ff001916610100179055565b6060600480546106b090611e60565b6005546001600160a01b03163314610b395760405162461bcd60e51b815260040161077590611e9a565b600e55565b60003381610b4c8286610bfe565b905083811015610bac5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610775565b61079c8286868403610cca565b600033610741818585610e62565b6000610bd4600283611f23565b905047610be082611073565b6000610bec8247611f45565b9050610bf883826111d6565b50505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610c535760405162461bcd60e51b815260040161077590611e9a565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610ca85760405162461bcd60e51b815260040161077590611e9a565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610d2c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610775565b6001600160a01b038216610d8d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610775565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610dfa8484610bfe565b90506000198114610bf85781811015610e555760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610775565b610bf88484848403610cca565b610e6d8383836112b9565b60185460ff1615610e8857610e8383838361162d565b505050565b610e9283836117fb565b15610f1a576000610ea230610a52565b9050610efa600f54601554601454601354601254601154610ec39190611f0b565b610ecd9190611f0b565b610ed79190611f0b565b610ee19190611f0b565b610eeb9084611f5c565b610ef59190611f23565b6118ab565b610f18600f5460165483610f0e9190611f5c565b61061c9190611f23565b505b610e83838383611b3d565b6001600160a01b038216610f855760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610775565b6001600160a01b03821660009081526020819052604090205481811015610ff95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610775565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611028908490611f45565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106110a8576110a8611f7b565b6001600160a01b03928316602091820292909201810191909152601b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111259190611f91565b8160018151811061113857611138611f7b565b6001600160a01b039283166020918202929092010152601b5461115e9130911684610cca565b601b546001600160a01b031663791ac9478360008430611180426103e8611f0b565b6040518663ffffffff1660e01b81526004016111a0959493929190611fae565b600060405180830381600087803b1580156111ba57600080fd5b505af11580156111ce573d6000803e3d6000fd5b505050505050565b601b546111f09030906001600160a01b0316600019610cca565b601b546005546001600160a01b039182169163f305d7199184913091879160009182911661122042612710611f0b565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c40160606040518083038185885af115801561128d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112b2919061201f565b5050505050565b6001600160a01b0383166113255760405162461bcd60e51b815260206004820152602d60248201527f45524332303a207472616e736665722066726f6d20746865205a45524f5f414460448201526c4452455353206164647265737360981b6064820152608401610775565b6001600160a01b03821661138f5760405162461bcd60e51b815260206004820152602b60248201527f45524332303a207472616e7366657220746f20746865205a45524f5f4144445260448201526a455353206164647265737360a81b6064820152608401610775565b600081116113f95760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152707468616e205a45524f5f4144445245535360781b6064820152608401610775565b6005546001600160a01b0384811691161480159061142557506005546001600160a01b03838116911614155b801561143957506001600160a01b03821615155b801561145057506001600160a01b03821661dead14155b801561145f575060185460ff16155b15610e8357601854610100900460ff166114b05760405162461bcd60e51b815260206004820152601260248201527154726164696e67206e6f742061637469766560701b6044820152606401610775565b6001600160a01b0383166000908152601a602052604090205460ff161561159b576017548111156115415760405162461bcd60e51b815260206004820152603560248201527f427579207472616e7366657220616d6f756e742065786365656473207468652060448201527436b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760591b6064820152608401610775565b60105461154d83610a52565b6115579083611f0b565b1115610e835760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b6044820152606401610775565b6001600160a01b0382166000908152601a602052604090205460ff161561154157601754811115610e835760405162461bcd60e51b815260206004820152603660248201527f53656c6c207472616e7366657220616d6f756e742065786365656473207468656044820152751036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a1760511b6064820152608401610775565b6001600160a01b0383166116915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610775565b6001600160a01b0382166116f35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610775565b6001600160a01b0383166000908152602081905260409020548181101561176b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610775565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906117a2908490611f0b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ee91815260200190565b60405180910390a3610bf8565b60008061180730610a52565b9050600e54811015801561181e575060185460ff16155b801561183857506007546001600160a01b03858116911614155b80156118595750600754600090611857906001600160a01b0316610a52565b115b801561187e57506001600160a01b03831660009081526019602052604090205460ff16155b80156118a357506001600160a01b03841660009081526019602052604090205460ff16155b949350505050565b604080516003808252608082019092526000916020820160608036833701905050905030816000815181106118e2576118e2611f7b565b6001600160a01b03928316602091820292909201810191909152601b54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561193b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195f9190611f91565b8160018151811061197257611972611f7b565b6001600160a01b0392831660209182029290920101526008548251911690829060029081106119a3576119a3611f7b565b6001600160a01b039283166020918202929092010152600854601b5460405163095ea7b360e01b81529083166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2b919061204d565b50601b60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa39190611f91565b601b5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1a919061204d565b50601b546001600160a01b0316635c11d7958360008430611180426103e8611f0b565b6001600160a01b03831660009081526019602052604081205482919060019060ff1680611b8257506001600160a01b03851660009081526019602052604090205460ff165b15611b8b575060005b8015611bb557611b9c868686611bc0565b9150611ba88285611f45565b9250611bb586308461162d565b6111ce86868561162d565b6001600160a01b0383166000908152601a60205260408120548190819060ff1615611bfd57601c54611bf69061ffff1683611f0b565b9150611c51565b6001600160a01b0385166000908152601a602052604090205460ff1615611c3557601c54611bf69062010000900461ffff1683611f0b565b601c54611c4e90640100000000900461ffff1683611f0b565b91505b8115611c7157600f54611c648386611f5c565b611c6e9190611f23565b90505b95945050505050565b600060208083528351808285015260005b81811015611ca757858101830151858201604001528201611c8b565b81811115611cb9576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611ce457600080fd5b50565b60008060408385031215611cfa57600080fd5b8235611d0581611ccf565b946020939093013593505050565b600060208284031215611d2557600080fd5b5035919050565b600080600060608486031215611d4157600080fd5b8335611d4c81611ccf565b92506020840135611d5c81611ccf565b929592945050506040919091013590565b803561ffff81168114611d7f57600080fd5b919050565b600080600060608486031215611d9957600080fd5b611da284611d6d565b9250611db060208501611d6d565b9150611dbe60408501611d6d565b90509250925092565b600060208284031215611dd957600080fd5b8135611de481611ccf565b9392505050565b60008060408385031215611dfe57600080fd5b8235611e0981611ccf565b91506020830135611e1981611ccf565b809150509250929050565b8015158114611ce457600080fd5b60008060408385031215611e4557600080fd5b8235611e5081611ccf565b91506020830135611e1981611e24565b600181811c90821680611e7457607f821691505b602082108103611e9457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611f0257611f02611ecf565b01949350505050565b60008219821115611f1e57611f1e611ecf565b500190565b600082611f4057634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611f5757611f57611ecf565b500390565b6000816000190483118215151615611f7657611f76611ecf565b500290565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611fa357600080fd5b8151611de481611ccf565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611ffe5784516001600160a01b031683529383019391830191600101611fd9565b50506001600160a01b03969096166060850152505050608001529392505050565b60008060006060848603121561203457600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561205f57600080fd5b8151611de481611e2456fea26469706673582212208d2ea4888587165871dd31e0e774048ffd4162768e0c5d4249623985400d04f864736f6c634300080d0033";

type CatPizzaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CatPizzaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CatPizza__factory extends ContractFactory {
  constructor(...args: CatPizzaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CatPizza> {
    return super.deploy(overrides || {}) as Promise<CatPizza>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CatPizza {
    return super.attach(address) as CatPizza;
  }
  override connect(signer: Signer): CatPizza__factory {
    return super.connect(signer) as CatPizza__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CatPizzaInterface {
    return new utils.Interface(_abi) as CatPizzaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CatPizza {
    return new Contract(address, _abi, signerOrProvider) as CatPizza;
  }
}
