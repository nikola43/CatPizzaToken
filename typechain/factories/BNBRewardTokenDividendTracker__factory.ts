/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BNBRewardTokenDividendTracker,
  BNBRewardTokenDividendTrackerInterface,
} from "../BNBRewardTokenDividendTracker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
    ],
    name: "ClaimWaitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ExcludeFromDividends",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "accumulativeDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimWait",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeDividends",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "dividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "excludedFromDividends",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "int256",
        name: "index",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "iterationsUntilProcessed",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "withdrawableDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsUntilAutoClaimAvailable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAccountAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfTokenHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTokenBalanceForDividends",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "processAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividendsDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newClaimWait",
        type: "uint256",
      },
    ],
    name: "updateClaimWait",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawableDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawnDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040518060400160405280601f81526020017f424e42526577617264546f6b656e5f4469766964656e645f547261636b6572008152506040518060400160405280601f81526020017f424e42526577617264546f6b656e5f4469766964656e645f547261636b657200815250600982828282600390805190602001906200009b92919062000146565b508151620000b190600490602085019062000146565b506005805460ff191660ff929092169190911790555060009350620000da925062000142915050565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061384060125569021e19e0c9bab240000060805262000228565b3390565b8280546200015490620001ec565b90600052602060002090601f016020900481019282620001785760008555620001c3565b82601f106200019357805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c3578251825591602001919060010190620001a6565b50620001d1929150620001d5565b5090565b5b80821115620001d15760008155600101620001d6565b600181811c908216806200020157607f821691505b6020821081036200022257634e487b7160e01b600052602260045260246000fd5b50919050565b60805161206d6200024b600039600081816105b30152610e77015261206d6000f3fe6080604052600436106101d35760003560e01c806385a6b3ae116100f8578063bc4c4b3711610090578063bc4c4b3714610581578063be10b614146105a1578063dd62ed3e146105d5578063e30443bc1461061b578063e7841ec01461063b578063e98030c714610650578063f2fde38b14610670578063fbcbc0f114610690578063ffb2c479146106b057600080fd5b806385a6b3ae146104585780638da5cb5b1461046e57806391b89fba1461049657806395d89b41146104b65780639c53c0ca146104cb578063a457c2d7146104eb578063a8b9d2401461050b578063a9059cbb1461052b578063aafd847a1461054b57600080fd5b8063313ce5671161016b578063313ce5671461030157806331e79db01461032357806339509351146103435780634e7b827f146103635780635183d6fd146103935780636a474002146103f85780636f2789ec1461040d57806370a0823114610423578063715018a61461044357600080fd5b806303c83302146101e757806306fdde03146101ef578063095ea7b31461021a57806309bbedde1461024a57806318160ddd14610269578063226cfa3d1461027e57806323b872dd146102ab57806327ce0147146102cb5780633009a609146102eb57600080fd5b366101e2576101e06106eb565b005b600080fd5b6101e06106eb565b3480156101fb57600080fd5b5061020461077e565b6040516102119190611c3b565b60405180910390f35b34801561022657600080fd5b5061023a610235366004611ca8565b610810565b6040519015158152602001610211565b34801561025657600080fd5b50600b545b604051908152602001610211565b34801561027557600080fd5b5060025461025b565b34801561028a57600080fd5b5061025b610299366004611cd4565b60116020526000908152604090205481565b3480156102b757600080fd5b5061023a6102c6366004611cf1565b610827565b3480156102d757600080fd5b5061025b6102e6366004611cd4565b610890565b3480156102f757600080fd5b5061025b600f5481565b34801561030d57600080fd5b5060055460405160ff9091168152602001610211565b34801561032f57600080fd5b506101e061033e366004611cd4565b6108e9565b34801561034f57600080fd5b5061023a61035e366004611ca8565b610a11565b34801561036f57600080fd5b5061023a61037e366004611cd4565b60106020526000908152604090205460ff1681565b34801561039f57600080fd5b506103b36103ae366004611d32565b610a47565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610211565b34801561040457600080fd5b506101e0610b9b565b34801561041957600080fd5b5061025b60125481565b34801561042f57600080fd5b5061025b61043e366004611cd4565b610c3f565b34801561044f57600080fd5b506101e0610c5a565b34801561046457600080fd5b5061025b60095481565b34801561047a57600080fd5b50600a546040516001600160a01b039091168152602001610211565b3480156104a257600080fd5b5061025b6104b1366004611cd4565b610cce565b3480156104c257600080fd5b50610204610cd9565b3480156104d757600080fd5b506101e06104e6366004611cd4565b610ce8565b3480156104f757600080fd5b5061023a610506366004611ca8565b610cf5565b34801561051757600080fd5b5061025b610526366004611cd4565b610d44565b34801561053757600080fd5b5061023a610546366004611ca8565b610d70565b34801561055757600080fd5b5061025b610566366004611cd4565b6001600160a01b031660009081526008602052604090205490565b34801561058d57600080fd5b5061023a61059c366004611d4b565b610d7d565b3480156105ad57600080fd5b5061025b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e157600080fd5b5061025b6105f0366004611d89565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561062757600080fd5b506101e0610636366004611ca8565b610e2b565b34801561064757600080fd5b50600f5461025b565b34801561065c57600080fd5b506101e061066b366004611d32565b610faa565b34801561067c57600080fd5b506101e061068b366004611cd4565b61110d565b34801561069c57600080fd5b506103b36106ab366004611cd4565b6111f8565b3480156106bc57600080fd5b506106d06106cb366004611d32565b611359565b60408051938452602084019290925290820152606001610211565b60006106f660025490565b1161070057600080fd5b341561077c5761073361071260025490565b61072034600160801b611476565b61072a9190611dcd565b600654906114ff565b60065560405134815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a260095461077890346114ff565b6009555b565b60606003805461078d90611def565b80601f01602080910402602001604051908101604052809291908181526020018280546107b990611def565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b5050505050905090565b600061081d33848461155e565b5060015b92915050565b6000610834848484611682565b610886843361088185604051806060016040528060288152602001611fc9602891396001600160a01b038a16600090815260016020908152604080832033845290915290205491906116d6565b61155e565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b906108df906108da906108d46108cf6108c688610c3f565b60065490611476565b611710565b90611720565b61175e565b6108219190611dcd565b600a546001600160a01b0316331461091c5760405162461bcd60e51b815260040161091390611e29565b60405180910390fd5b6001600160a01b03811660009081526010602052604090205460ff161561094257600080fd5b6001600160a01b0381166000908152601060205260408120805460ff19166001179055610970908290611771565b60405163131836e760e21b815273__$be1d1893d0e2fafb134b2891b6a87861bd$__90634c60db9c906109aa90600b908590600401611e5e565b60006040518083038186803b1580156109c257600080fd5b505af41580156109d6573d6000803e3d6000fd5b50506040516001600160a01b03841692507fa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b259150600090a250565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161081d91859061088190866114ff565b600080600080600080600080600b73__$be1d1893d0e2fafb134b2891b6a87861bd$__63deb3d89690916040518263ffffffff1660e01b8152600401610a8f91815260200190565b602060405180830381865af4158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190611e75565b8910610af5575060009650600019955085945086935083925082915081905080610b90565b6040516368d54f3f60e11b8152600b6004820152602481018a905260009073__$be1d1893d0e2fafb134b2891b6a87861bd$__9063d1aa9e7e90604401602060405180830381865af4158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190611e8e565b9050610b7e816111f8565b98509850985098509850985098509850505b919395975091939597565b60405162461bcd60e51b81526020600482015260796024820152600080516020611fa983398151915260448201527f2077697468647261774469766964656e642064697361626c65642e205573652060648201527f7468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e608482015278102127212932bbb0b9322a37b5b2b71031b7b73a3930b1ba1760391b60a482015260c401610913565b6001600160a01b031660009081526020819052604090205490565b600a546001600160a01b03163314610c845760405162461bcd60e51b815260040161091390611e29565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600061082182610d44565b60606004805461078d90611def565b610cf1816117c4565b5050565b600061081d338461088185604051806060016040528060258152602001611ff1602591393360009081526001602090815260408083206001600160a01b038d16845290915290205491906116d6565b6001600160a01b03811660009081526008602052604081205461082190610d6a84610890565b9061190a565b600061081d338484611682565b600a546000906001600160a01b03163314610daa5760405162461bcd60e51b815260040161091390611e29565b6000610db5846117c4565b90508015610e21576001600160a01b038416600081815260116020526040908190204290555184151591907fa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf09290610e0f9085815260200190565b60405180910390a36001915050610821565b5060009392505050565b600a546001600160a01b03163314610e555760405162461bcd60e51b815260040161091390611e29565b6001600160a01b03821660009081526010602052604090205460ff16610cf1577f00000000000000000000000000000000000000000000000000000000000000008110610f2457610ea68282611771565b604051632f0ad01760e21b8152600b60048201526001600160a01b03831660248201526044810182905273__$be1d1893d0e2fafb134b2891b6a87861bd$__9063bc2b405c9060640160006040518083038186803b158015610f0757600080fd5b505af4158015610f1b573d6000803e3d6000fd5b50505050610f9a565b610f2f826000611771565b60405163131836e760e21b815273__$be1d1893d0e2fafb134b2891b6a87861bd$__90634c60db9c90610f6990600b908690600401611e5e565b60006040518083038186803b158015610f8157600080fd5b505af4158015610f95573d6000803e3d6000fd5b505050505b610fa5826001610d7d565b505050565b600a546001600160a01b03163314610fd45760405162461bcd60e51b815260040161091390611e29565b610e108110158015610fe95750620151808111155b6110665760405162461bcd60e51b81526020600482015260546024820152600080516020611fa983398151915260448201527f20636c61696d57616974206d757374206265207570646174656420746f206265606482015273747765656e203120616e6420323420686f75727360601b608482015260a401610913565b60125481036110da5760405162461bcd60e51b81526020600482015260466024820152600080516020611fa983398151915260448201527f2043616e6e6f742075706461746520636c61696d5761697420746f2073616d656064820152652076616c756560d01b608482015260a401610913565b60125460405182907f474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f90600090a3601255565b600a546001600160a01b031633146111375760405162461bcd60e51b815260040161091390611e29565b6001600160a01b03811661119c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610913565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080600080600080889750600b73__$be1d1893d0e2fafb134b2891b6a87861bd$__6317e142d190918a6040518363ffffffff1660e01b8152600401611243929190611e5e565b602060405180830381865af4158015611260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112849190611e75565b96506000199550600087126112e657600f548711156112b257600f546112ab90889061194c565b95506112e6565b600f54600b54600091106112c75760006112d6565b600f54600b546112d69161190a565b90506112e28882611720565b9650505b6112ef88610d44565b94506112fa88610890565b6001600160a01b038916600090815260116020526040902054909450925082611324576000611332565b6012546113329084906114ff565b915042821161134257600061134c565b61134c824261190a565b9050919395975091939597565b600b546000908190819080820361137b575050600f546000925082915061146f565b600f546000805a90506000805b898410801561139657508582105b1561145e57846113a581611eab565b600b54909650861090506113b857600094505b6000600b60000186815481106113d0576113d0611ec4565b60009182526020808320909101546001600160a01b0316808352601190915260409091205490915061140190611989565b1561142457611411816001610d7d565b15611424578161142081611eab565b9250505b8261142e81611eab565b93505060005a9050808511156114555761145261144b868361190a565b87906114ff565b95505b93506113889050565b600f85905590975095509193505050505b9193909250565b60008260000361148857506000610821565b60006114948385611eda565b9050826114a18583611dcd565b146114f85760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610913565b9392505050565b60008061150c8385611ef9565b9050838110156114f85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610913565b6001600160a01b0383166115c05760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610913565b6001600160a01b0382166116215760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610913565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405162461bcd60e51b81526020600482015260356024820152600080516020611fa983398151915260448201527408139bc81d1c985b9cd9995c9cc8185b1b1bddd959605a1b6064820152608401610913565b600081848411156116fa5760405162461bcd60e51b81526004016109139190611c3b565b5060006117078486611f11565b95945050505050565b6000818181121561082157600080fd5b60008061172d8385611f28565b9050600083121580156117405750838112155b80611755575060008312801561175557508381125b6114f857600080fd5b60008082121561176d57600080fd5b5090565b600061177c83610c3f565b9050808211156117a4576000611792838361190a565b905061179e84826119b0565b50505050565b80821015610fa55760006117b8828461190a565b905061179e8482611a14565b6000806117d083610d44565b90508015611901576001600160a01b0383166000908152600860205260409020546117fb90826114ff565b6001600160a01b038416600081815260086020526040908190209290925590517fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d9061184a9084815260200190565b60405180910390a26000836001600160a01b031682610bb890604051600060405180830381858888f193505050503d80600081146118a4576040519150601f19603f3d011682016040523d82523d6000602084013e6118a9565b606091505b50509050806118fa576001600160a01b0384166000908152600860205260409020546118d5908361190a565b6001600160a01b03909416600090815260086020526040812094909455509192915050565b5092915050565b50600092915050565b60006114f883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116d6565b6000806119598385611f69565b90506000831215801561196c5750838113155b80611755575060008312801561175557508381136114f857600080fd5b60004282111561199b57506000919050565b6012546119a8428461190a565b101592915050565b6119ba8282611a58565b6119f46119d56108cf8360065461147690919063ffffffff16565b6001600160a01b0384166000908152600760205260409020549061194c565b6001600160a01b0390921660009081526007602052604090209190915550565b611a1e8282611b37565b6119f4611a396108cf8360065461147690919063ffffffff16565b6001600160a01b03841660009081526007602052604090205490611720565b6001600160a01b038216611aae5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610913565b600254611abb90826114ff565b6002556001600160a01b038216600090815260208190526040902054611ae190826114ff565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6001600160a01b038216611b975760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610913565b611bd481604051806060016040528060228152602001612016602291396001600160a01b03851660009081526020819052604090205491906116d6565b6001600160a01b038316600090815260208190526040902055600254611bfa908261190a565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611b2b565b600060208083528351808285015260005b81811015611c6857858101830151858201604001528201611c4c565b81811115611c7a576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611ca557600080fd5b50565b60008060408385031215611cbb57600080fd5b8235611cc681611c90565b946020939093013593505050565b600060208284031215611ce657600080fd5b81356114f881611c90565b600080600060608486031215611d0657600080fd5b8335611d1181611c90565b92506020840135611d2181611c90565b929592945050506040919091013590565b600060208284031215611d4457600080fd5b5035919050565b60008060408385031215611d5e57600080fd5b8235611d6981611c90565b915060208301358015158114611d7e57600080fd5b809150509250929050565b60008060408385031215611d9c57600080fd5b8235611da781611c90565b91506020830135611d7e81611c90565b634e487b7160e01b600052601160045260246000fd5b600082611dea57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680611e0357607f821691505b602082108103611e2357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b9182526001600160a01b0316602082015260400190565b600060208284031215611e8757600080fd5b5051919050565b600060208284031215611ea057600080fd5b81516114f881611c90565b600060018201611ebd57611ebd611db7565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611ef457611ef4611db7565b500290565b60008219821115611f0c57611f0c611db7565b500190565b600082821015611f2357611f23611db7565b500390565b600080821280156001600160ff1b0384900385131615611f4a57611f4a611db7565b600160ff1b8390038412811615611f6357611f63611db7565b50500190565b60008083128015600160ff1b850184121615611f8757611f87611db7565b6001600160ff1b0384018313811615611fa257611fa2611db7565b5050039056fe424e42526577617264546f6b656e5f4469766964656e645f547261636b65723a42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212209b06824369d56a7833fd12209c803052bda187a75fa428891285de317552d1ac64736f6c634300080d0033";

type BNBRewardTokenDividendTrackerConstructorParams =
  | [
      linkLibraryAddresses: BNBRewardTokenDividendTrackerLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNBRewardTokenDividendTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BNBRewardTokenDividendTracker__factory extends ContractFactory {
  constructor(...args: BNBRewardTokenDividendTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BNBRewardTokenDividendTracker__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BNBRewardTokenDividendTrackerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$be1d1893d0e2fafb134b2891b6a87861bd\\$__", "g"),
      linkLibraryAddresses["contracts/CatPizza.sol:IterableMapping"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BNBRewardTokenDividendTracker> {
    return super.deploy(
      overrides || {}
    ) as Promise<BNBRewardTokenDividendTracker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BNBRewardTokenDividendTracker {
    return super.attach(address) as BNBRewardTokenDividendTracker;
  }
  connect(signer: Signer): BNBRewardTokenDividendTracker__factory {
    return super.connect(signer) as BNBRewardTokenDividendTracker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNBRewardTokenDividendTrackerInterface {
    return new utils.Interface(_abi) as BNBRewardTokenDividendTrackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BNBRewardTokenDividendTracker {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BNBRewardTokenDividendTracker;
  }
}

export interface BNBRewardTokenDividendTrackerLibraryAddresses {
  ["contracts/CatPizza.sol:IterableMapping"]: string;
}
